{"version":3,"sources":["dcx2496/constants.js","dcx2496/commands.js","Temperature.js","DelayUnits.js","Localization.js","DeviceSelect.js","Connection.js","Settings.js","Upload.js","Config.js","ConfigNavigation.js","plots/PlotTooltip.js","plots/TransferFunction.js","plots/CrossoverPlot.js","CrossoverPlotPanel.js","dcx2496/parser.js","parameters/BoolParameter.js","parameters/EnumParameter.js","parameters/NumberParameter.js","parameters/index.js","Crossover.js","Crossovers.js","Delay.js","Delays.js","DynamicEQ.js","DynamicEQs.js","plots/EQPlot.js","EQPlotPanel.js","EQ.js","EQList.js","EQs.js","Gain.js","Gains.js","Limiter.js","Limiters.js","OutputSource.js","OutputSources.js","ChannelName.js","ChannelNames.js","OutputRouting.js","Phase.js","Phases.js","Outputs.js","InputRouting.js","Inputs.js","Device.js","ChannelLevel.js","MuteButton.js","SelectButton.js","ChannelControls.js","ChannelLevels.js","DeviceNavigation.js","App.js","index.js"],"names":["INPUTS","OUTPUTS","CHANNELS","concat","CHANNEL_LEVELS","undefined","module","exports","LOG_FREQUENCY_SCALE","LOG_ZERO_TO_4000_MS","OUTPUT_NAMES","CROSSOVER_FILTERS","OUTPUT_SOURCES","INPUT_AB_SOURCES","ATTACK_TIMES","EQ_RATIOS","INPUT_SUM_TYPES","INPUT_C_GAINS","OUTPUT_CONFIGS","STEREO_LINK_MODES","EQ_Q_VALUES","EQ_TYPES","EQ_SHELVING_SLOPES","DELAY_UNITS","POLARITIES","SEARCH_RESPONSE","DUMP_RESPONSE","COMMAND_BYTE","PING_RESPONSE","DIRECT_COMMAND","ID_BYTE","PART_BYTE","PART_0","PART_1","constants","require","setupCommands","name","type","values","syncResponse","bits6","part","index","unit","min","max","step","bit7","bit","bits8","inputOutputCommands","syncResponses","eqCommands","outputCommands","Temperature","PureComponent","handleValueChange","event","this","props","onChange","delayUnits","value","target","param","Number","handleCorrectionChange","isDelayCorrectionOn","render","toFahrenheit","airTemperature","options","i","push","toFixed","InputGroup","FormControl","disabled","as","placeholder","map","option","key","Append","Button","variant","onClick","DelayUnits","state","handleDelayUnitChange","setState","ToggleButtonGroup","defaultValue","style","padding","width","ToggleButton","Localization","Component","shouldComponentUpdate","nextProps","setup","isXs","isEqual","Nav","NavDropdown","title","drop","className","id","DeviceSelect","onSelect","devices","free","selected","selectedDevice","find","length","deviceName","version","deviceId","Item","eventKey","Connection","networks","password","toastOptions","position","toast","POSITION","BOTTOM_LEFT","handleSubmit","preventDefault","updateConnection","handleDisconnection","diconnectConnetion","nextState","ip","hostname","componentDidMount","fetchConnection","fetchNetworks","showFetchError","isActive","error","toastId","fetch","credentials","response","ok","Error","statusText","json","connection","current","handlePropertyChange","property","formData","FormData","append","data","URLSearchParams","method","body","loadingSpinner","fadeIn","color","connectForm","Form","onSubmit","Group","Label","Control","sort","enumeral","block","connectionForm","Settings","updateSettings","fetchSettings","apSsid","apPassword","auth","mdnsHost","flowControl","autoDisableAP","basicAuth","atob","replace","split","username","loadingDone","btoa","info","isFormValid","Row","column","sm","Col","isInvalid","Upload","handleDrop","acceptedFiles","uploading","Request","post","send","on","percent","end","err","fetchVersion","fetchReleases","releases","statusMessage","ProgressBar","animated","height","now","label","getNewRelease","release","assets","filter","asset","tag_name","link","browser_download_url","isLatest","compareVersions","href","latestRelease","multiple","onDrop","getRootProps","getInputProps","borderWidth","borderColor","borderStyle","borderRadius","buildDate","renderRelease","Config","handleShowModal","showModal","Modal","show","onHide","Header","closeButton","Title","Body","Footer","ConfigNavigation","device","currentBreakpoint","onSelectDevice","Navbar","fixed","bg","isReady","defaultProps","withBreakpoints","DefaultTooltipContent","renderContent","payload","items","entry","dataKey","display","paddingTop","paddingBottom","margin","backgroundColor","border","whiteSpace","Math","floor","TransferFunction","constructor","frequencyPoints","transferFunction","complex","startFrequency","endFrequency","count","freqData","frequency","log10","pow","firstOrderFilter","f0","isHighPass","w0","pi","apply","frequencyPoint","w","s","giveMeName","add","divide","multiply","secondOrderFilter","Q","isHighpass","getMagnitude","point","toPolar","r","getAngle","phi","points1","points2","getGroupDelay","angle","angUw","unwrapPhase","number","diff","j","angleNew","wrapcount","parametricEQ","g","q","K","A","B","frequenzy","nom","denom","firstOrderShelving","gain","isHighShelving","abs","secondOrderShelving","gainAbs","temporary1","temporary2","sqrt","multiplyVectors","applyCrosover","fk1","fk2","generateFrequencyPoints","CrossoverPlot","channels","isGainApplied","windowWidth","createPlotData","Object","keys","tf","highpassFilter","highpassFrequency","lowpassFilter","lowpassFrequency","channel","channelName","hz","result","forEach","rounded","round","colors","baseValue","top","right","bottom","left","tickFormatter","tick","allowDataOverflow","domain","content","PlotTooltip","channelId","strokeWidth","stroke","fill","fillOpacity","windowSize","CrossoverPlotPanel","handleToggleGain","previousState","Card","size","commands","Parser","string","match","toLowerCase","toUpperCase","parameter","indexOf","a","parseInt","slice","Uint8Array","hex","toString","parts","isBitSet","messages","newMessage","message","parseFloat","String","fromCharCode","join","trim","inputs","outputs","eqs","1","2","3","4","5","6","7","8","9","command","parameterName","camelize","getValue","reverseCommandData","group","ioIndex","eqIndex","eq","pingResponse","buffer","level","clearBit","isLimited","part0Buffer","part1buffer","devicesBuffer","parseDevice","parseDevices","some","Array","isArray","commandBuffer","toPaddedHex","hexStringToByte","hexTarget","hexParameter","valueLow","valueHigh","camelName","getCommandData","commandNumber","serialize","channelNumber","output","BoolParameter","handleClick","isTrue","isInverted","hasLabel","onColor","FormGroup","active","EnumParameter","enums","SliderWithTooltip","createSliderWithTooltip","Slider","NumberParameter","handleOnBeforeChange","moving","handleOnChange","showConfirmChange","oldValue","newValue","formatter","Promise","resolve","reject","dialog","textAlign","bsSize","actions","Dialog","CancelAction","OKAction","handleOnAfterChange","confirmChange","handleReduction","handleAddition","labelFormatter","marks","marginTop","FormLabel","handleStyle","tipFormatter","onBeforeChange","onAfterChange","ref","element","components","createComponent","commmand","EnumComponent","enumComponent","BoolComponent","boolComponent","NumberComponent","numberComponent","squeeze","word","parameters","InputSumType","InputABSource","InputCGain","OutputConfig","Stereolink","StereolinkMode","DelayLink","CrossoverLink","IsDelayCorrectionOn","AirTemperature","MuteOutsWhenPowered","InputASumGain","InputBSumGain","InputCSumGain","Gain","Mute","IsDelayOn","LongDelay","IsEQOn","EQNumber","EQIndex","DynamicEQAttack","DynamicEQRelease","DynamicEQRatio","DynamicEQThreshold","IsDynamicEQOn","DynamicEQFrequency","DynamicEQQ","DynamicEQGain","DynamicEQType","DynamicEQShelving","EQFrequency","EQQ","EQGain","EQType","EQShelving","ChannelName","Source","HighpassFilter","HighpassFrequency","LowpassFilter","LowpassFrequency","IsLimiterOn","LimiterThreshold","LimiterRelease","Polarity","Phase","ShortDelay","commandTypes","SETUP_COMMAND","EQ_COMMAND","IO_COMMAND","OUTPUT_COMMAND","Crossover","xs","Crossovers","md","Delay","isDelayOn","shortDelay","longDelay","temperatureFactor","localizeLength","localizeDividor","localizeUnit","Delays","delayLink","DynamicEQ","isDynamicEQOn","dynamicEQType","dynamicEQFrequency","dynamicEQGain","dynamicEQQ","dynamicEQShelving","dynamicEQAttack","dynamicEQRelease","dynamicEQRatio","dynamicEQThreshold","lg","DynamicEQs","EQPlot","plotData","eqsKey","isEQOn","eQGain","eQType","eQFrequency","eQQ","eQShelving","tickFormatterkey","dot","charAt","EQ","EQs","isBlocking","eqsKeys","activeEQs","activeFound","unshift","blocking","Tabs","defaultActiveKey","Tab","EQList","Gains","Limiter","isLimiterOn","limiterThreshold","limiterRelease","Limiters","OutputSource","source","OutputSources","ChannelNames","OutputRouting","stereolink","muteOutsWhenPowered","outputConfig","crossoverLink","polarity","phase","Phases","Outputs","unmountOnExit","EQPlotPanel","InputRouting","inputABSource","inputCGain","stereolinkMode","inputSumType","inputASumGain","inputBSumGain","inputCSumGain","Inputs","Device","page","displayIfPage","exected","alt","ChannelLevel","isOutput","MuteButton","isMuted","float","SelectButton","isSelected","ChannelControls","isToggled","onToggleChange","inputChannels","outputChannels","ChannelLevels","handleMuteAll","handleToggleChange","assign","handleToggle","inputCommands","input","ouput","mute","isAnyUnmuted","isAnySelected","DeviceNavigation","handleLevelsShowChange","isOpen","showLevels","onPageChange","onBlockingChange","open","onToggle","Link","activeKey","App","handleBlockingChange","handleDeviceUpdate","oldDevice","cloneDeep","serializeCommands","invalidateUntil","Date","setSeconds","getSeconds","headers","autoClose","handleDeviceSelect","oldSelected","handlePageChange","window","scrollTo","pollState","pollStatus","componentWillUnmount","clearInterval","stateTimer","statusTimer","pollingState","arrayBuffer","parseState","dismiss","pollingStatus","parseStatus","ReactDOM","breakpoints","xl","document","querySelector"],"mappings":"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C,cAAe,CACb,CACEX,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,OAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,KAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,KAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO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EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,OAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,KAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,KAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,QAKf,CACEN,KAAM,cACNC,KAAM,OACNC,OAAQL,EAAUZ,mBAClB8B,cAAe,CACb,CACEX,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,OAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,KAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,KAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MAGX,CACEF,MAAO,CACLC,KAAM,EACNC,MAAO,MA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","file":"static/js/main.bf1b5711.chunk.js","sourcesContent":["const LOG_FREQUENCY_SCALE = [\n  '20',\n  '20.5',\n  '21',\n  '21.5',\n  '22',\n  '22.5',\n  '23',\n  '23.5',\n  '24',\n  '24.5',\n  '25',\n  '25.5',\n  '26',\n  '27',\n  '27.5',\n  '28',\n  '28.5',\n  '29',\n  '30',\n  '30.5',\n  '31',\n  '32',\n  '32.5',\n  '33',\n  '34',\n  '34.5',\n  '35',\n  '36',\n  '37',\n  '38',\n  '38.5',\n  '39',\n  '40',\n  '41',\n  '42',\n  '43',\n  '44',\n  '45',\n  '46',\n  '47',\n  '48',\n  '49',\n  '50',\n  '51',\n  '52',\n  '53',\n  '54',\n  '56',\n  '57',\n  '58',\n  '59',\n  '61',\n  '62',\n  '63',\n  '65',\n  '66',\n  '68',\n  '69',\n  '71',\n  '72',\n  '74',\n  '75',\n  '77',\n  '79',\n  '80',\n  '82',\n  '84',\n  '86',\n  '88',\n  '90',\n  '92',\n  '94',\n  '96',\n  '98',\n  '100',\n  '102',\n  '104',\n  '107',\n  '109',\n  '111',\n  '114',\n  '116',\n  '119',\n  '121',\n  '124',\n  '127',\n  '130',\n  '132',\n  '135',\n  '138',\n  '141',\n  '145',\n  '148',\n  '151',\n  '154',\n  '158',\n  '161',\n  '165',\n  '168',\n  '172',\n  '176',\n  '180',\n  '184',\n  '188',\n  '192',\n  '196',\n  '200',\n  '205',\n  '209',\n  '214',\n  '218',\n  '223',\n  '228',\n  '233',\n  '238',\n  '243',\n  '249',\n  '254',\n  '260',\n  '266',\n  '271',\n  '277',\n  '284',\n  '290',\n  '296',\n  '303',\n  '309',\n  '316',\n  '323',\n  '330',\n  '337',\n  '345',\n  '352',\n  '360',\n  '368',\n  '376',\n  '384',\n  '393',\n  '401',\n  '410',\n  '419',\n  '428',\n  '438',\n  '447',\n  '457',\n  '467',\n  '478',\n  '488',\n  '499',\n  '510',\n  '521',\n  '532',\n  '544',\n  '556',\n  '568',\n  '581',\n  '594',\n  '607',\n  '620',\n  '634',\n  '647',\n  '662',\n  '676',\n  '691',\n  '706',\n  '722',\n  '738',\n  '754',\n  '770',\n  '787',\n  '805',\n  '822',\n  '840',\n  '859',\n  '878',\n  '897',\n  '917',\n  '937',\n  '957',\n  '979',\n  '1000',\n  '1020',\n  '1040',\n  '1070',\n  '1090',\n  '1110',\n  '1140',\n  '1160',\n  '1190',\n  '1210',\n  '1240',\n  '1270',\n  '1290',\n  '1320',\n  '1350',\n  '1380',\n  '1410',\n  '1440',\n  '1470',\n  '1500',\n  '1530',\n  '1570',\n  '1600',\n  '1640',\n  '1670',\n  '1710',\n  '1740',\n  '1780',\n  '1820',\n  '1860',\n  '1900',\n  '1940',\n  '1980',\n  '2030',\n  '2070',\n  '2110',\n  '2160',\n  '2210',\n  '2250',\n  '2300',\n  '2350',\n  '2400',\n  '2460',\n  '2510',\n  '2560',\n  '2620',\n  '2680',\n  '2730',\n  '2790',\n  '2850',\n  '2920',\n  '2980',\n  '3040',\n  '3110',\n  '3180',\n  '3240',\n  '3310',\n  '3390',\n  '3460',\n  '3530',\n  '3610',\n  '3690',\n  '3770',\n  '3850',\n  '3930',\n  '4020',\n  '4110',\n  '4190',\n  '4280',\n  '4380',\n  '4470',\n  '4570',\n  '4670',\n  '4770',\n  '4870',\n  '4980',\n  '5080',\n  '5190',\n  '5310',\n  '5420',\n  '5540',\n  '5660',\n  '5780',\n  '5910',\n  '6030',\n  '6160',\n  '6300',\n  '6430',\n  '6570',\n  '6720',\n  '6860',\n  '7010',\n  '7160',\n  '7320',\n  '7470',\n  '7640',\n  '7800',\n  '7970',\n  '8140',\n  '8320',\n  '8500',\n  '8680',\n  '8870',\n  '9060',\n  '9260',\n  '9460',\n  '9660',\n  '9870',\n  '10100',\n  '10300',\n  '10500',\n  '10800',\n  '11000',\n  '11200',\n  '11500',\n  '11700',\n  '12000',\n  '12200',\n  '12500',\n  '12800',\n  '13000',\n  '13300',\n  '13600',\n  '13900',\n  '14200',\n  '14500',\n  '14800',\n  '15100',\n  '15500',\n  '15800',\n  '16100',\n  '16500',\n  '16900',\n  '17200',\n  '17600',\n  '18000',\n  '18400',\n  '18800',\n  '19200',\n  '19600',\n  '20000'\n];\nconst LOG_ZERO_TO_4000_MS = [\n  '20',\n  '21',\n  '22',\n  '23',\n  '24',\n  '25',\n  '26',\n  '27',\n  '28',\n  '29',\n  '30',\n  '31',\n  '32',\n  '33',\n  '34',\n  '35',\n  '36',\n  '37',\n  '38',\n  '39',\n  '40',\n  '41',\n  '42',\n  '43',\n  '44',\n  '45',\n  '46',\n  '47',\n  '48',\n  '49',\n  '50',\n  '51',\n  '52',\n  '53',\n  '54',\n  '55',\n  '56',\n  '57',\n  '58',\n  '59',\n  '60',\n  '61',\n  '62',\n  '63',\n  '64',\n  '65',\n  '66',\n  '67',\n  '68',\n  '69',\n  '70',\n  '71',\n  '72',\n  '73',\n  '74',\n  '75',\n  '76',\n  '77',\n  '78',\n  '79',\n  '80',\n  '81',\n  '82',\n  '83',\n  '84',\n  '85',\n  '86',\n  '87',\n  '89',\n  '91',\n  '93',\n  '95',\n  '97',\n  '99',\n  '101',\n  '103',\n  '105',\n  '108',\n  '110',\n  '112',\n  '115',\n  '117',\n  '119',\n  '122',\n  '124',\n  '127',\n  '130',\n  '132',\n  '135',\n  '138',\n  '141',\n  '144',\n  '147',\n  '150',\n  '153',\n  '156',\n  '160',\n  '163',\n  '167',\n  '170',\n  '174',\n  '177',\n  '181',\n  '185',\n  '189',\n  '193',\n  '197',\n  '201',\n  '205',\n  '209',\n  '214',\n  '218',\n  '223',\n  '227',\n  '232',\n  '237',\n  '242',\n  '247',\n  '252',\n  '258',\n  '263',\n  '269',\n  '274',\n  '280',\n  '286',\n  '292',\n  '298',\n  '304',\n  '311',\n  '317',\n  '324',\n  '331',\n  '337',\n  '345',\n  '352',\n  '359',\n  '367',\n  '374',\n  '382',\n  '390',\n  '399',\n  '407',\n  '415',\n  '424',\n  '433',\n  '442',\n  '451',\n  '461',\n  '471',\n  '480',\n  '491',\n  '501',\n  '511',\n  '522',\n  '533',\n  '544',\n  '556',\n  '567',\n  '579',\n  '591',\n  '604',\n  '616',\n  '629',\n  '643',\n  '656',\n  '670',\n  '684',\n  '698',\n  '713',\n  '728',\n  '743',\n  '759',\n  '775',\n  '791',\n  '808',\n  '825',\n  '842',\n  '860',\n  '878',\n  '896',\n  '915',\n  '934',\n  '954',\n  '974',\n  '994',\n  '1015',\n  '1036',\n  '1058',\n  '1080',\n  '1103',\n  '1126',\n  '1150',\n  '1174',\n  '1199',\n  '1224',\n  '1249',\n  '1276',\n  '1303',\n  '1330',\n  '1358',\n  '1386',\n  '1415',\n  '1445',\n  '1475',\n  '1506',\n  '1538',\n  '1570',\n  '1603',\n  '1637',\n  '1671',\n  '1706',\n  '1742',\n  '1779',\n  '1816',\n  '1854',\n  '1893',\n  '1933',\n  '1974',\n  '2015',\n  '2057',\n  '2101',\n  '2145',\n  '2190',\n  '2236',\n  '2283',\n  '2330',\n  '2379',\n  '2429',\n  '2480',\n  '2532',\n  '2586',\n  '2640',\n  '2695',\n  '2752',\n  '2810',\n  '2869',\n  '2929',\n  '2990',\n  '3053',\n  '3117',\n  '3183',\n  '3250',\n  '3318',\n  '3387',\n  '3459',\n  '3531',\n  '3605',\n  '3681',\n  '3758',\n  '3837',\n  '3918',\n  '4000'\n];\nconst OUTPUT_NAMES = [\n  'Full-range',\n  'Subwoofer',\n  'Low',\n  'Low-mid',\n  'Mid',\n  'Hi-mid',\n  'Hi',\n  'Left Full-range',\n  'Left Subwoofer',\n  'Left Low',\n  'Left Low-mid',\n  'Left Mid',\n  'Left Hi-mid',\n  'Left Hi',\n  'Right Full-range',\n  'Right Subwoofer',\n  'Right Low',\n  'Right Low-mid',\n  'Right Mid',\n  'Right Hi-mid',\n  'Right Hi',\n  'Center Full-range',\n  'Center Subwoofer',\n  'Center Low',\n  'Center Low-mid',\n  'Center Mid',\n  'Center Hi-mid',\n  'Center Hi'\n];\nconst CROSSOVER_FILTERS = [\n  'off',\n  'but6',\n  'but12',\n  'bes12',\n  'lr12',\n  'but18',\n  'but24',\n  'bes24',\n  'lr24',\n  'but48',\n  'lr48'\n];\nconst OUTPUT_SOURCES = ['A', 'B', 'C', 'Sum'];\nconst ATTACK_TIMES = [\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '10',\n  '11',\n  '12',\n  '13',\n  '14',\n  '15',\n  '16',\n  '17',\n  '18',\n  '19',\n  '20',\n  '21',\n  '22',\n  '23',\n  '24',\n  '25',\n  '26',\n  '27',\n  '28',\n  '29',\n  '30',\n  '31',\n  '32',\n  '33',\n  '34',\n  '35',\n  '36',\n  '37',\n  '38',\n  '39',\n  '40',\n  '41',\n  '42',\n  '43',\n  '44',\n  '45',\n  '46',\n  '47',\n  '48',\n  '49',\n  '50',\n  '51',\n  '52',\n  '53',\n  '54',\n  '55',\n  '56',\n  '57',\n  '58',\n  '59',\n  '60',\n  '61',\n  '62',\n  '63',\n  '64',\n  '65',\n  '66',\n  '67',\n  '68',\n  '69',\n  '70',\n  '71',\n  '72',\n  '74',\n  '76',\n  '78',\n  '81',\n  '83',\n  '85',\n  '87',\n  '90',\n  '92',\n  '95',\n  '97',\n  '100',\n  '103',\n  '105',\n  '108',\n  '111',\n  '114',\n  '117',\n  '120',\n  '124',\n  '127',\n  '131',\n  '134',\n  '138',\n  '141',\n  '145',\n  '149',\n  '153',\n  '157',\n  '162',\n  '166',\n  '170',\n  '175',\n  '180',\n  '185',\n  '190',\n  '195',\n  '200'\n];\nconst EQ_RATIOS = [\n  '1.1:1',\n  '1.2:1',\n  '1.4:1',\n  '1.6:1',\n  '1.8:1',\n  '2.0:1',\n  '2.5:1',\n  '3.0:1',\n  '3.5:1',\n  '4.0:1',\n  '5.0:1',\n  '6.0:1',\n  '8.0:1',\n  '10.0:1',\n  '20.0:1',\n  'inf:1'\n];\nconst INPUT_SUM_TYPES = ['Off', 'A', 'B', 'C', 'A+B', 'A+C', 'B+C'];\nconst INPUT_AB_SOURCES = ['Analog', 'AES/EBU'];\nconst INPUT_C_GAINS = ['Line', 'Mic'];\nconst OUTPUT_CONFIGS = ['mono', 'lmhlmh', 'llmmhh', 'lhlhlh'];\nconst STEREO_LINK_MODES = ['Off', 'A+B', 'A+B+C', 'A+B+C+Sum'];\nconst EQ_Q_VALUES = [\n  '0.1',\n  '0.125',\n  '0.15',\n  '0.175',\n  '0.2',\n  '0.225',\n  '0.25',\n  '0.275',\n  '0.3',\n  '0.33',\n  '0.36',\n  '0.4',\n  '0.43',\n  '0.46',\n  '0.5',\n  '0.6',\n  '0.65',\n  '0.7',\n  '0.8',\n  '0.9',\n  '1.0',\n  '1.1',\n  '1.3',\n  '1.4',\n  '1.6',\n  '1.8',\n  '2.0',\n  '2.2',\n  '2.5',\n  '2.8',\n  '3.2',\n  '3.5',\n  '4.0',\n  '4.5',\n  '5.0',\n  '5.6',\n  '6.3',\n  '7.1',\n  '7.9',\n  '8.9',\n  '10'\n];\nconst EQ_TYPES = ['Low Shelv', 'Bandpass', 'High Shelv'];\nconst EQ_SHELVING_SLOPES = ['6dB', '12dB'];\nconst DELAY_UNITS = ['mm', 'inch'];\nconst POLARITIES = ['Normal', 'Inverted'];\nconst INPUTS = ['A', 'B', 'C', 'Sum'];\nconst OUTPUTS = ['1', '2', '3', '4', '5', '6'];\nconst CHANNELS = INPUTS.concat(OUTPUTS);\nconst CHANNEL_LEVELS = [undefined, -40, -30, -20, -10, -5, -2, 0];\nconst SEARCH_RESPONSE = 0;\nconst DUMP_RESPONSE = 16;\nconst COMMAND_BYTE = 6;\nconst PING_RESPONSE = 4;\nconst DIRECT_COMMAND = 32;\nconst ID_BYTE = 4;\nconst PART_BYTE = 12;\nconst PART_0 = 0;\nconst PART_1 = 1;\n\nmodule.exports = {\n  LOG_FREQUENCY_SCALE,\n  LOG_ZERO_TO_4000_MS,\n  OUTPUT_NAMES,\n  CROSSOVER_FILTERS,\n  OUTPUT_SOURCES,\n  INPUT_AB_SOURCES,\n  ATTACK_TIMES,\n  EQ_RATIOS,\n  INPUT_SUM_TYPES,\n  INPUT_C_GAINS,\n  OUTPUT_CONFIGS,\n  STEREO_LINK_MODES,\n  EQ_Q_VALUES,\n  EQ_TYPES,\n  EQ_SHELVING_SLOPES,\n  DELAY_UNITS,\n  POLARITIES,\n  INPUTS,\n  OUTPUTS,\n  CHANNELS,\n  CHANNEL_LEVELS,\n  SEARCH_RESPONSE,\n  DUMP_RESPONSE,\n  COMMAND_BYTE,\n  PING_RESPONSE,\n  DIRECT_COMMAND,\n  ID_BYTE,\n  PART_BYTE,\n  PART_0,\n  PART_1\n};\n","const constants = require('./constants');\n\nconst setupCommands = [\n  {\n    name: 'Input Sum Type',\n    type: 'enum',\n    values: constants.INPUT_SUM_TYPES,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 117\n      }\n    }\n  },\n  {\n    name: 'Input AB Source',\n    type: 'enum',\n    values: constants.INPUT_AB_SOURCES,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 119\n      }\n    }\n  },\n  {\n    name: 'Input C Gain',\n    type: 'enum',\n    values: constants.INPUT_C_GAINS,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 121\n      }\n    }\n  },\n  {\n    name: 'Output Config',\n    type: 'enum',\n    values: constants.OUTPUT_CONFIGS,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 123\n      }\n    }\n  },\n  {\n    name: 'Stereolink',\n    type: 'bool',\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 126\n      }\n    }\n  },\n  {\n    name: 'Stereolink Mode',\n    type: 'enum',\n    values: constants.STEREO_LINK_MODES,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 128\n      }\n    }\n  },\n  {\n    name: 'Delay Link',\n    type: 'bool',\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 130\n      }\n    }\n  },\n  {\n    name: 'Crossover Link',\n    type: 'bool',\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 133\n      }\n    }\n  },\n  {\n    name: 'Is Delay Correction On',\n    type: 'bool',\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 135\n      }\n    }\n  },\n  {\n    name: 'Air Temperature',\n    unit: '°C',\n    type: 'number',\n    min: -20,\n    max: 50,\n    step: 1,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 137\n      }\n    }\n  },\n  {\n    name: 'Delay Units',\n    type: 'enum',\n    values: constants.DELAY_UNITS,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 55\n      }\n    }\n  },\n  {\n    name: 'Mute Outs When Powered',\n    type: 'bool',\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 57\n      }\n    }\n  },\n  {\n    name: 'Input A Sum Gain',\n    type: 'number',\n    unit: 'dB',\n    min: -15,\n    max: 15,\n    step: 0.1,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 139\n      },\n      bit7: {\n        part: 0,\n        index: 140,\n        bit: 6\n      },\n      bits8: {\n        part: 0,\n        index: 141\n      }\n    }\n  },\n  {\n    name: 'Input B Sum Gain',\n    type: 'number',\n    unit: 'dB',\n    min: -15,\n    max: 15,\n    step: 0.1,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 142\n      },\n      bit7: {\n        part: 0,\n        index: 148,\n        bit: 1\n      },\n      bits8: {\n        part: 0,\n        index: 143\n      }\n    }\n  },\n  {\n    name: 'Input C Sum Gain',\n    type: 'number',\n    unit: 'dB',\n    min: -15,\n    max: 15,\n    step: 0.1,\n    syncResponse: {\n      bits6: {\n        part: 0,\n        index: 144\n      },\n      bit7: {\n        part: 0,\n        index: 148,\n        bit: 3\n      },\n      bits8: {\n        part: 0,\n        index: 145\n      }\n    }\n  }\n];\n\nconst inputOutputCommands = [\n  {\n    name: 'Gain',\n    type: 'number',\n    unit: 'dB',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 146\n        },\n        bit7: {\n          part: 0,\n          index: 148,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 147\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 288\n        },\n        bit7: {\n          part: 0,\n          index: 292,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 289\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 430\n        },\n        bit7: {\n          part: 0,\n          index: 436,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 431\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 571\n        },\n        bit7: {\n          part: 0,\n          index: 572,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 573\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 713\n        },\n        bit7: {\n          part: 0,\n          index: 716,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 714\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 882\n        },\n        bit7: {\n          part: 0,\n          index: 884,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 883\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 51\n        },\n        bit7: {\n          part: 1,\n          index: 52,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 53\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 221\n        },\n        bit7: {\n          part: 1,\n          index: 228,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 222\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 390\n        },\n        bit7: {\n          part: 1,\n          index: 396,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 391\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 559\n        },\n        bit7: {\n          part: 1,\n          index: 564,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 560\n        }\n      }\n    ],\n    min: -15,\n    max: 15,\n    step: 0.1\n  },\n  {\n    name: 'Mute',\n    type: 'bool',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 149\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 290\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 432\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 574\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 715\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 885\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 54\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 223\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 392\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 561\n        }\n      }\n    ]\n  },\n  {\n    name: 'Is Delay On',\n    type: 'bool',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 151\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 293\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 434\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 576\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 718\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 887\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 56\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 225\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 394\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 563\n        }\n      }\n    ]\n  },\n  {\n    name: 'Long Delay',\n    type: 'number',\n    unit: 'cm',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 153\n        },\n        bit7: {\n          part: 0,\n          index: 156,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 154\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 295\n        },\n        bit7: {\n          part: 0,\n          index: 300,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 296\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 437\n        },\n        bit7: {\n          part: 0,\n          index: 444,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 438\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 578\n        },\n        bit7: {\n          part: 0,\n          index: 580,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 579\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 720\n        },\n        bit7: {\n          part: 0,\n          index: 724,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 721\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 889\n        },\n        bit7: {\n          part: 0,\n          index: 892,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 890\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 58\n        },\n        bit7: {\n          part: 1,\n          index: 60,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 59\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 227\n        },\n        bit7: {\n          part: 1,\n          index: 228,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 229\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 397\n        },\n        bit7: {\n          part: 1,\n          index: 404,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 398\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 566\n        },\n        bit7: {\n          part: 1,\n          index: 572,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 567\n        }\n      }\n    ],\n    min: 0,\n    max: 20000,\n    step: 5\n  },\n  {\n    name: 'Is EQ On',\n    type: 'bool',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 155\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 297\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 439\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 581\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 722\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 891\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 61\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 230\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 399\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 568\n        }\n      }\n    ]\n  },\n  {\n    name: 'EQ Number',\n    type: 'number',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 158\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 299\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 441\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 583\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 725\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 894\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 63\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 232\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 401\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 570\n        }\n      }\n    ],\n    min: 0,\n    max: 9,\n    step: 1\n  },\n  {\n    name: 'EQ Index',\n    type: 'number',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 160\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 302\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 443\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 585\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 727\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 896\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 65\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 234\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 403\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 573\n        }\n      }\n    ],\n    min: 0,\n    max: 9,\n    step: 1\n  },\n  {\n    name: 'Dynamic EQ Attack',\n    type: 'enum',\n    unit: 'ms',\n    values: constants.ATTACK_TIMES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 162\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 304\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 446\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 587\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 729\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 898\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 67\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 237\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 406\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 575\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Release',\n    type: 'enum',\n    unit: 'ms',\n    values: constants.LOG_ZERO_TO_4000_MS,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 165\n        },\n        bit7: {\n          part: 0,\n          index: 172,\n          bit: 0\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 306\n        },\n        bit7: {\n          part: 0,\n          index: 308,\n          bit: 5\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 448\n        },\n        bit7: {\n          part: 0,\n          index: 452,\n          bit: 3\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 590\n        },\n        bit7: {\n          part: 0,\n          index: 596,\n          bit: 1\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 731\n        },\n        bit7: {\n          part: 0,\n          index: 732,\n          bit: 6\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 901\n        },\n        bit7: {\n          part: 0,\n          index: 908,\n          bit: 0\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 70\n        },\n        bit7: {\n          part: 1,\n          index: 76,\n          bit: 1\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 239\n        },\n        bit7: {\n          part: 1,\n          index: 244,\n          bit: 2\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 408\n        },\n        bit7: {\n          part: 1,\n          index: 412,\n          bit: 3\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 577\n        },\n        bit7: {\n          part: 1,\n          index: 580,\n          bit: 4\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Ratio',\n    type: 'enum',\n    values: constants.EQ_RATIOS,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 167\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 309\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 450\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 592\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 734\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 903\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 72\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 241\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 410\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 579\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Threshold',\n    type: 'number',\n    unit: 'dB',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 169\n        },\n        bit7: {\n          part: 0,\n          index: 172,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 170\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 311\n        },\n        bit7: {\n          part: 0,\n          index: 316,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 312\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 453\n        },\n        bit7: {\n          part: 0,\n          index: 460,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 454\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 594\n        },\n        bit7: {\n          part: 0,\n          index: 596,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 595\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 736\n        },\n        bit7: {\n          part: 0,\n          index: 740,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 737\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 905\n        },\n        bit7: {\n          part: 0,\n          index: 908,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 906\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 74\n        },\n        bit7: {\n          part: 1,\n          index: 76,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 75\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 243\n        },\n        bit7: {\n          part: 1,\n          index: 244,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 245\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 413\n        },\n        bit7: {\n          part: 1,\n          index: 420,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 414\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 582\n        },\n        bit7: {\n          part: 1,\n          index: 588,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 583\n        }\n      }\n    ],\n    min: -60,\n    max: 0,\n    step: 0.1\n  },\n  {\n    name: 'Is Dynamic EQ On',\n    type: 'bool',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 171\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 313\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 455\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 597\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 738\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 907\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 77\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 246\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 415\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 584\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Frequency',\n    type: 'enum',\n    unit: 'Hz',\n    values: constants.LOG_FREQUENCY_SCALE,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 174\n        },\n        bit7: {\n          part: 0,\n          index: 180,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 175\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 315\n        },\n        bit7: {\n          part: 0,\n          index: 316,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 317\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 457\n        },\n        bit7: {\n          part: 0,\n          index: 460,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 458\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 599\n        },\n        bit7: {\n          part: 0,\n          index: 604,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 600\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 741\n        },\n        bit7: {\n          part: 0,\n          index: 748,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 742\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 910\n        },\n        bit7: {\n          part: 0,\n          index: 916,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 911\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 79\n        },\n        bit7: {\n          part: 1,\n          index: 84,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 80\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 248\n        },\n        bit7: {\n          part: 1,\n          index: 252,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 249\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 417\n        },\n        bit7: {\n          part: 1,\n          index: 420,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 418\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 586\n        },\n        bit7: {\n          part: 1,\n          index: 588,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 587\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Q',\n    type: 'enum',\n    values: constants.EQ_Q_VALUES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 176\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 318\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 459\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 601\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 743\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 912\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 81\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 250\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 419\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 589\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Gain',\n    type: 'number',\n    unit: 'dB',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 178\n        },\n        bit7: {\n          part: 0,\n          index: 180,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 179\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 320\n        },\n        bit7: {\n          part: 0,\n          index: 324,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 321\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 462\n        },\n        bit7: {\n          part: 0,\n          index: 468,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 463\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 603\n        },\n        bit7: {\n          part: 0,\n          index: 604,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 605\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 745\n        },\n        bit7: {\n          part: 0,\n          index: 748,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 746\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 914\n        },\n        bit7: {\n          part: 0,\n          index: 916,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 915\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 83\n        },\n        bit7: {\n          part: 1,\n          index: 84,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 85\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 253\n        },\n        bit7: {\n          part: 1,\n          index: 260,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 254\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 422\n        },\n        bit7: {\n          part: 1,\n          index: 428,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 423\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 591\n        },\n        bit7: {\n          part: 1,\n          index: 596,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 592\n        }\n      }\n    ],\n    min: -15,\n    max: 15,\n    step: 0.1\n  },\n  {\n    name: 'Dynamic EQ Type',\n    type: 'enum',\n    values: constants.EQ_TYPES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 181\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 322\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 464\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 606\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 747\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 917\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 86\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 255\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 424\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 593\n        }\n      }\n    ]\n  },\n  {\n    name: 'Dynamic EQ Shelving',\n    type: 'enum',\n    values: constants.EQ_SHELVING_SLOPES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 183\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 325\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 466\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 608\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 750\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 919\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 88\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 257\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 426\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 595\n        }\n      }\n    ]\n  }\n];\n\nconst eqCommands = [\n  {\n    name: 'EQ Frequency',\n    type: 'enum',\n    unit: 'Hz',\n    values: constants.LOG_FREQUENCY_SCALE,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 185\n        },\n        bit7: {\n          part: 0,\n          index: 188,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 186\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 197\n        },\n        bit7: {\n          part: 0,\n          index: 204,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 198\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 208\n        },\n        bit7: {\n          part: 0,\n          index: 212,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 209\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 219\n        },\n        bit7: {\n          part: 0,\n          index: 220,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 221\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 231\n        },\n        bit7: {\n          part: 0,\n          index: 236,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 232\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 242\n        },\n        bit7: {\n          part: 0,\n          index: 244,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 243\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 254\n        },\n        bit7: {\n          part: 0,\n          index: 260,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 255\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 265\n        },\n        bit7: {\n          part: 0,\n          index: 268,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 266\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 277\n        },\n        bit7: {\n          part: 0,\n          index: 284,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 278\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 327\n        },\n        bit7: {\n          part: 0,\n          index: 332,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 328\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 338\n        },\n        bit7: {\n          part: 0,\n          index: 340,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 339\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 350\n        },\n        bit7: {\n          part: 0,\n          index: 356,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 351\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 361\n        },\n        bit7: {\n          part: 0,\n          index: 364,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 362\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 373\n        },\n        bit7: {\n          part: 0,\n          index: 380,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 374\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 384\n        },\n        bit7: {\n          part: 0,\n          index: 388,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 385\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 395\n        },\n        bit7: {\n          part: 0,\n          index: 396,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 397\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 407\n        },\n        bit7: {\n          part: 0,\n          index: 412,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 408\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 418\n        },\n        bit7: {\n          part: 0,\n          index: 420,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 419\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 469\n        },\n        bit7: {\n          part: 0,\n          index: 476,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 470\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 480\n        },\n        bit7: {\n          part: 0,\n          index: 484,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 481\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 491\n        },\n        bit7: {\n          part: 0,\n          index: 492,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 493\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 503\n        },\n        bit7: {\n          part: 0,\n          index: 508,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 504\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 514\n        },\n        bit7: {\n          part: 0,\n          index: 516,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 515\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 526\n        },\n        bit7: {\n          part: 0,\n          index: 532,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 527\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 537\n        },\n        bit7: {\n          part: 0,\n          index: 540,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 538\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 549\n        },\n        bit7: {\n          part: 0,\n          index: 556,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 550\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 560\n        },\n        bit7: {\n          part: 0,\n          index: 564,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 561\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 610\n        },\n        bit7: {\n          part: 0,\n          index: 612,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 611\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 622\n        },\n        bit7: {\n          part: 0,\n          index: 628,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 623\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 633\n        },\n        bit7: {\n          part: 0,\n          index: 636,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 634\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 645\n        },\n        bit7: {\n          part: 0,\n          index: 652,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 646\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 656\n        },\n        bit7: {\n          part: 0,\n          index: 660,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 657\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 667\n        },\n        bit7: {\n          part: 0,\n          index: 668,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 669\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 679\n        },\n        bit7: {\n          part: 0,\n          index: 684,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 680\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 690\n        },\n        bit7: {\n          part: 0,\n          index: 692,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 691\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 702\n        },\n        bit7: {\n          part: 0,\n          index: 708,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 703\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 752\n        },\n        bit7: {\n          part: 0,\n          index: 756,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 753\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 763\n        },\n        bit7: {\n          part: 0,\n          index: 764,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 765\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 775\n        },\n        bit7: {\n          part: 0,\n          index: 780,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 776\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 786\n        },\n        bit7: {\n          part: 0,\n          index: 788,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 787\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 798\n        },\n        bit7: {\n          part: 0,\n          index: 804,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 799\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 809\n        },\n        bit7: {\n          part: 0,\n          index: 812,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 810\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 821\n        },\n        bit7: {\n          part: 0,\n          index: 828,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 822\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 832\n        },\n        bit7: {\n          part: 0,\n          index: 836,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 833\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 843\n        },\n        bit7: {\n          part: 0,\n          index: 844,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 845\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 921\n        },\n        bit7: {\n          part: 0,\n          index: 924,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 922\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 933\n        },\n        bit7: {\n          part: 0,\n          index: 940,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 934\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 944\n        },\n        bit7: {\n          part: 0,\n          index: 948,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 945\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 955\n        },\n        bit7: {\n          part: 0,\n          index: 956,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 957\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 967\n        },\n        bit7: {\n          part: 0,\n          index: 972,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 968\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 978\n        },\n        bit7: {\n          part: 0,\n          index: 980,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 979\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 990\n        },\n        bit7: {\n          part: 0,\n          index: 996,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 991\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 1001\n        },\n        bit7: {\n          part: 0,\n          index: 1004,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 1002\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 13\n        },\n        bit7: {\n          part: 1,\n          index: 20,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 14\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 90\n        },\n        bit7: {\n          part: 1,\n          index: 92,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 91\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 102\n        },\n        bit7: {\n          part: 1,\n          index: 108,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 103\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 113\n        },\n        bit7: {\n          part: 1,\n          index: 116,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 114\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 125\n        },\n        bit7: {\n          part: 1,\n          index: 132,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 126\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 136\n        },\n        bit7: {\n          part: 1,\n          index: 140,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 137\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 147\n        },\n        bit7: {\n          part: 1,\n          index: 148,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 149\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 159\n        },\n        bit7: {\n          part: 1,\n          index: 164,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 160\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 170\n        },\n        bit7: {\n          part: 1,\n          index: 172,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 171\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 182\n        },\n        bit7: {\n          part: 1,\n          index: 188,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 183\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 259\n        },\n        bit7: {\n          part: 1,\n          index: 260,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 261\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 271\n        },\n        bit7: {\n          part: 1,\n          index: 276,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 272\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 282\n        },\n        bit7: {\n          part: 1,\n          index: 284,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 283\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 294\n        },\n        bit7: {\n          part: 1,\n          index: 300,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 295\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 305\n        },\n        bit7: {\n          part: 1,\n          index: 308,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 306\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 317\n        },\n        bit7: {\n          part: 1,\n          index: 324,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 318\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 328\n        },\n        bit7: {\n          part: 1,\n          index: 332,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 329\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 339\n        },\n        bit7: {\n          part: 1,\n          index: 340,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 341\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 351\n        },\n        bit7: {\n          part: 1,\n          index: 356,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 352\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 429\n        },\n        bit7: {\n          part: 1,\n          index: 436,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 430\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 440\n        },\n        bit7: {\n          part: 1,\n          index: 444,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 441\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 451\n        },\n        bit7: {\n          part: 1,\n          index: 452,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 453\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 463\n        },\n        bit7: {\n          part: 1,\n          index: 468,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 464\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 474\n        },\n        bit7: {\n          part: 1,\n          index: 476,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 475\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 486\n        },\n        bit7: {\n          part: 1,\n          index: 492,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 487\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 497\n        },\n        bit7: {\n          part: 1,\n          index: 500,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 498\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 509\n        },\n        bit7: {\n          part: 1,\n          index: 516,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 510\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 520\n        },\n        bit7: {\n          part: 1,\n          index: 524,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 521\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 598\n        },\n        bit7: {\n          part: 1,\n          index: 604,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 599\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 609\n        },\n        bit7: {\n          part: 1,\n          index: 612,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 610\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 621\n        },\n        bit7: {\n          part: 1,\n          index: 628,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 622\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 632\n        },\n        bit7: {\n          part: 1,\n          index: 636,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 633\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 643\n        },\n        bit7: {\n          part: 1,\n          index: 644,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 645\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 655\n        },\n        bit7: {\n          part: 1,\n          index: 660,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 656\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 666\n        },\n        bit7: {\n          part: 1,\n          index: 668,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 667\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 678\n        },\n        bit7: {\n          part: 1,\n          index: 684,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 679\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 689\n        },\n        bit7: {\n          part: 1,\n          index: 692,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 690\n        }\n      }\n    ]\n  },\n  {\n    name: 'EQ Q',\n    type: 'enum',\n    values: constants.EQ_Q_VALUES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 187\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 199\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 210\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 222\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 233\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 245\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 256\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 267\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 279\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 329\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 341\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 352\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 363\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 375\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 386\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 398\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 409\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 421\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 471\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 482\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 494\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 505\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 517\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 528\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 539\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 551\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 562\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 613\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 624\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 635\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 647\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 658\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 670\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 681\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 693\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 704\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 754\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 766\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 777\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 789\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 800\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 811\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 823\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 834\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 846\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 923\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 935\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 946\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 958\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 969\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 981\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 992\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 1003\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 15\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 93\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 104\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 115\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 127\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 138\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 150\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 161\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 173\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 184\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 262\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 273\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 285\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 296\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 307\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 319\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 330\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 342\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 353\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 431\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 442\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 454\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 465\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 477\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 488\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 499\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 511\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 522\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 600\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 611\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 623\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 634\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 646\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 657\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 669\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 680\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 691\n        }\n      }\n    ]\n  },\n  {\n    name: 'EQ Gain',\n    type: 'number',\n    unit: 'dB',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 190\n        },\n        bit7: {\n          part: 0,\n          index: 196,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 191\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 201\n        },\n        bit7: {\n          part: 0,\n          index: 204,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 202\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 213\n        },\n        bit7: {\n          part: 0,\n          index: 220,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 214\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 224\n        },\n        bit7: {\n          part: 0,\n          index: 228,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 225\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 235\n        },\n        bit7: {\n          part: 0,\n          index: 236,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 237\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 247\n        },\n        bit7: {\n          part: 0,\n          index: 252,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 248\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 258\n        },\n        bit7: {\n          part: 0,\n          index: 260,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 259\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 270\n        },\n        bit7: {\n          part: 0,\n          index: 276,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 271\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 281\n        },\n        bit7: {\n          part: 0,\n          index: 284,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 282\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 331\n        },\n        bit7: {\n          part: 0,\n          index: 332,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 333\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 343\n        },\n        bit7: {\n          part: 0,\n          index: 348,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 344\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 354\n        },\n        bit7: {\n          part: 0,\n          index: 356,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 355\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 366\n        },\n        bit7: {\n          part: 0,\n          index: 372,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 367\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 377\n        },\n        bit7: {\n          part: 0,\n          index: 380,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 378\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 389\n        },\n        bit7: {\n          part: 0,\n          index: 396,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 390\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 400\n        },\n        bit7: {\n          part: 0,\n          index: 404,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 401\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 411\n        },\n        bit7: {\n          part: 0,\n          index: 412,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 413\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 423\n        },\n        bit7: {\n          part: 0,\n          index: 428,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 424\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 473\n        },\n        bit7: {\n          part: 0,\n          index: 476,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 474\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 485\n        },\n        bit7: {\n          part: 0,\n          index: 492,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 486\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 496\n        },\n        bit7: {\n          part: 0,\n          index: 500,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 497\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 507\n        },\n        bit7: {\n          part: 0,\n          index: 508,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 509\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 519\n        },\n        bit7: {\n          part: 0,\n          index: 524,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 520\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 530\n        },\n        bit7: {\n          part: 0,\n          index: 532,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 531\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 542\n        },\n        bit7: {\n          part: 0,\n          index: 548,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 543\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 553\n        },\n        bit7: {\n          part: 0,\n          index: 556,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 554\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 565\n        },\n        bit7: {\n          part: 0,\n          index: 572,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 566\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 615\n        },\n        bit7: {\n          part: 0,\n          index: 620,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 616\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 626\n        },\n        bit7: {\n          part: 0,\n          index: 628,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 627\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 638\n        },\n        bit7: {\n          part: 0,\n          index: 644,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 639\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 649\n        },\n        bit7: {\n          part: 0,\n          index: 652,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 650\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 661\n        },\n        bit7: {\n          part: 0,\n          index: 668,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 662\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 672\n        },\n        bit7: {\n          part: 0,\n          index: 676,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 673\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 683\n        },\n        bit7: {\n          part: 0,\n          index: 684,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 685\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 695\n        },\n        bit7: {\n          part: 0,\n          index: 700,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 696\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 706\n        },\n        bit7: {\n          part: 0,\n          index: 708,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 707\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 757\n        },\n        bit7: {\n          part: 0,\n          index: 764,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 758\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 768\n        },\n        bit7: {\n          part: 0,\n          index: 772,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 769\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 779\n        },\n        bit7: {\n          part: 0,\n          index: 780,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 781\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 791\n        },\n        bit7: {\n          part: 0,\n          index: 796,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 792\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 802\n        },\n        bit7: {\n          part: 0,\n          index: 804,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 803\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 814\n        },\n        bit7: {\n          part: 0,\n          index: 820,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 815\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 825\n        },\n        bit7: {\n          part: 0,\n          index: 828,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 826\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 837\n        },\n        bit7: {\n          part: 0,\n          index: 844,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 838\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 848\n        },\n        bit7: {\n          part: 0,\n          index: 852,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 849\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 926\n        },\n        bit7: {\n          part: 0,\n          index: 932,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 927\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 937\n        },\n        bit7: {\n          part: 0,\n          index: 940,\n          bit: 4\n        },\n        bits8: {\n          part: 0,\n          index: 938\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 949\n        },\n        bit7: {\n          part: 0,\n          index: 956,\n          bit: 0\n        },\n        bits8: {\n          part: 0,\n          index: 950\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 960\n        },\n        bit7: {\n          part: 0,\n          index: 964,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 961\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 971\n        },\n        bit7: {\n          part: 0,\n          index: 972,\n          bit: 6\n        },\n        bits8: {\n          part: 0,\n          index: 973\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 983\n        },\n        bit7: {\n          part: 0,\n          index: 988,\n          bit: 2\n        },\n        bits8: {\n          part: 0,\n          index: 984\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 994\n        },\n        bit7: {\n          part: 0,\n          index: 996,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 995\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 1006\n        },\n        bit7: {\n          part: 0,\n          index: 1012,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 1007\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 17\n        },\n        bit7: {\n          part: 1,\n          index: 20,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 18\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 95\n        },\n        bit7: {\n          part: 1,\n          index: 100,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 96\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 106\n        },\n        bit7: {\n          part: 1,\n          index: 108,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 107\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 118\n        },\n        bit7: {\n          part: 1,\n          index: 124,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 119\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 129\n        },\n        bit7: {\n          part: 1,\n          index: 132,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 130\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 141\n        },\n        bit7: {\n          part: 1,\n          index: 148,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 142\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 152\n        },\n        bit7: {\n          part: 1,\n          index: 156,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 153\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 163\n        },\n        bit7: {\n          part: 1,\n          index: 164,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 165\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 175\n        },\n        bit7: {\n          part: 1,\n          index: 180,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 176\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 186\n        },\n        bit7: {\n          part: 1,\n          index: 188,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 187\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 264\n        },\n        bit7: {\n          part: 1,\n          index: 268,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 265\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 275\n        },\n        bit7: {\n          part: 1,\n          index: 276,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 277\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 287\n        },\n        bit7: {\n          part: 1,\n          index: 292,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 288\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 298\n        },\n        bit7: {\n          part: 1,\n          index: 300,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 299\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 310\n        },\n        bit7: {\n          part: 1,\n          index: 316,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 311\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 321\n        },\n        bit7: {\n          part: 1,\n          index: 324,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 322\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 333\n        },\n        bit7: {\n          part: 1,\n          index: 340,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 334\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 344\n        },\n        bit7: {\n          part: 1,\n          index: 348,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 345\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 355\n        },\n        bit7: {\n          part: 1,\n          index: 356,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 357\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 433\n        },\n        bit7: {\n          part: 1,\n          index: 436,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 434\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 445\n        },\n        bit7: {\n          part: 1,\n          index: 452,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 446\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 456\n        },\n        bit7: {\n          part: 1,\n          index: 460,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 457\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 467\n        },\n        bit7: {\n          part: 1,\n          index: 468,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 469\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 479\n        },\n        bit7: {\n          part: 1,\n          index: 484,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 480\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 490\n        },\n        bit7: {\n          part: 1,\n          index: 492,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 491\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 502\n        },\n        bit7: {\n          part: 1,\n          index: 508,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 503\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 513\n        },\n        bit7: {\n          part: 1,\n          index: 516,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 514\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 525\n        },\n        bit7: {\n          part: 1,\n          index: 532,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 526\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 602\n        },\n        bit7: {\n          part: 1,\n          index: 604,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 603\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 614\n        },\n        bit7: {\n          part: 1,\n          index: 620,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 615\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 625\n        },\n        bit7: {\n          part: 1,\n          index: 628,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 626\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 637\n        },\n        bit7: {\n          part: 1,\n          index: 644,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 638\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 648\n        },\n        bit7: {\n          part: 1,\n          index: 652,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 649\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 659\n        },\n        bit7: {\n          part: 1,\n          index: 660,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 661\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 671\n        },\n        bit7: {\n          part: 1,\n          index: 676,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 672\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 682\n        },\n        bit7: {\n          part: 1,\n          index: 684,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 683\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 694\n        },\n        bit7: {\n          part: 1,\n          index: 700,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 695\n        }\n      }\n    ],\n    min: -15,\n    max: 15,\n    step: 0.1\n  },\n  {\n    name: 'EQ Type',\n    type: 'enum',\n    values: constants.EQ_TYPES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 192\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 203\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 215\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 226\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 238\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 249\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 261\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 272\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 283\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 334\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 345\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 357\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 368\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 379\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 391\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 402\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 414\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 425\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 475\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 487\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 498\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 510\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 521\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 533\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 544\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 555\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 567\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 617\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 629\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 640\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 651\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 663\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 674\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 686\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 697\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 709\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 759\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 770\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 782\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 793\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 805\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 816\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 827\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 839\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 850\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 928\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 939\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 951\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 962\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 974\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 985\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 997\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 1008\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 19\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 97\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 109\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 120\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 131\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 143\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 154\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 166\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 177\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 189\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 266\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 278\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 289\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 301\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 312\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 323\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 335\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 346\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 358\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 435\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 447\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 458\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 470\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 481\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 493\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 504\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 515\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 527\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 605\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 616\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 627\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 639\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 650\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 662\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 673\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 685\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 696\n        }\n      }\n    ]\n  },\n  {\n    name: 'EQ Shelving',\n    type: 'enum',\n    values: constants.EQ_SHELVING_SLOPES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 194\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 206\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 217\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 229\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 240\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 251\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 263\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 274\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 286\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 336\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 347\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 359\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 370\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 382\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 393\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 405\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 416\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 427\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 478\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 489\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 501\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 512\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 523\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 535\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 546\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 558\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 569\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 619\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 631\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 642\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 654\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 665\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 677\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 688\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 699\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 711\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 761\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 773\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 784\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 795\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 807\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 818\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 830\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 841\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 853\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 930\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 942\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 953\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 965\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 976\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 987\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 999\n        }\n      },\n      {\n        bits6: {\n          part: 0,\n          index: 1010\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 22\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 99\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 111\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 122\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 134\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 145\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 157\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 168\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 179\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 191\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 269\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 280\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 291\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 303\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 314\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 326\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 337\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 349\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 360\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 438\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 449\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 461\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 472\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 483\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 495\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 506\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 518\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 529\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 607\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 618\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 630\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 641\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 653\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 664\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 675\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 687\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 698\n        }\n      }\n    ]\n  }\n];\n\nconst outputCommands = [\n  {\n    name: 'Channel Name',\n    type: 'enum',\n    values: constants.OUTPUT_NAMES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 855\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 24\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 193\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 362\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 531\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 701\n        }\n      }\n    ]\n  },\n  {\n    name: 'Source',\n    type: 'enum',\n    values: constants.OUTPUT_SOURCES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 857\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 26\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 195\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 365\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 534\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 703\n        }\n      }\n    ]\n  },\n  {\n    name: 'Highpass Filter',\n    type: 'enum',\n    values: constants.CROSSOVER_FILTERS,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 859\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 29\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 198\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 367\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 536\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 705\n        }\n      }\n    ]\n  },\n  {\n    name: 'Highpass Frequency',\n    type: 'enum',\n    unit: 'Hz',\n    values: constants.LOG_FREQUENCY_SCALE,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 862\n        },\n        bit7: {\n          part: 0,\n          index: 868,\n          bit: 1\n        },\n        bits8: {\n          part: 0,\n          index: 863\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 31\n        },\n        bit7: {\n          part: 1,\n          index: 36,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 32\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 200\n        },\n        bit7: {\n          part: 1,\n          index: 204,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 201\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 369\n        },\n        bit7: {\n          part: 1,\n          index: 372,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 370\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 538\n        },\n        bit7: {\n          part: 1,\n          index: 540,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 539\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 707\n        },\n        bit7: {\n          part: 1,\n          index: 708,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 709\n        }\n      }\n    ]\n  },\n  {\n    name: 'Lowpass Filter',\n    type: 'enum',\n    values: constants.CROSSOVER_FILTERS,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 864\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 33\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 202\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 371\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 541\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 710\n        }\n      }\n    ]\n  },\n  {\n    name: 'Lowpass Frequency',\n    type: 'enum',\n    unit: 'Hz',\n    values: constants.LOG_FREQUENCY_SCALE,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 866\n        },\n        bit7: {\n          part: 0,\n          index: 868,\n          bit: 5\n        },\n        bits8: {\n          part: 0,\n          index: 867\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 35\n        },\n        bit7: {\n          part: 1,\n          index: 36,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 37\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 205\n        },\n        bit7: {\n          part: 1,\n          index: 212,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 206\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 374\n        },\n        bit7: {\n          part: 1,\n          index: 380,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 375\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 543\n        },\n        bit7: {\n          part: 1,\n          index: 548,\n          bit: 2\n        },\n        bits8: {\n          part: 1,\n          index: 544\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 712\n        },\n        bit7: {\n          part: 1,\n          index: 716,\n          bit: 3\n        },\n        bits8: {\n          part: 1,\n          index: 713\n        }\n      }\n    ]\n  },\n  {\n    name: 'Is Limiter On',\n    type: 'bool',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 869\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 38\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 207\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 376\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 545\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 714\n        }\n      }\n    ]\n  },\n  {\n    name: 'Limiter Threshold',\n    type: 'number',\n    unit: 'dB',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 871\n        },\n        bit7: {\n          part: 0,\n          index: 876,\n          bit: 2\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 40\n        },\n        bit7: {\n          part: 1,\n          index: 44,\n          bit: 3\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 209\n        },\n        bit7: {\n          part: 1,\n          index: 212,\n          bit: 4\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 378\n        },\n        bit7: {\n          part: 1,\n          index: 380,\n          bit: 5\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 547\n        },\n        bit7: {\n          part: 1,\n          index: 548,\n          bit: 6\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 717\n        },\n        bit7: {\n          part: 1,\n          index: 724,\n          bit: 0\n        }\n      }\n    ],\n    min: -24,\n    max: 0,\n    step: 0.1\n  },\n  {\n    name: 'Limiter Release',\n    type: 'enum',\n    unit: 'ms',\n    values: constants.LOG_ZERO_TO_4000_MS,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 873\n        },\n        bit7: {\n          part: 0,\n          index: 876,\n          bit: 4\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 42\n        },\n        bit7: {\n          part: 1,\n          index: 44,\n          bit: 5\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 211\n        },\n        bit7: {\n          part: 1,\n          index: 212,\n          bit: 6\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 381\n        },\n        bit7: {\n          part: 1,\n          index: 388,\n          bit: 0\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 550\n        },\n        bit7: {\n          part: 1,\n          index: 556,\n          bit: 1\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 719\n        },\n        bit7: {\n          part: 1,\n          index: 724,\n          bit: 2\n        }\n      }\n    ]\n  },\n  {\n    name: 'Polarity',\n    type: 'enum',\n    values: constants.POLARITIES,\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 875\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 45\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 214\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 383\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 552\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 721\n        }\n      }\n    ]\n  },\n  {\n    name: 'Phase',\n    type: 'number',\n    unit: '°',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 878\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 47\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 216\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 385\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 554\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 723\n        }\n      }\n    ],\n    min: 0,\n    max: 180,\n    step: 5\n  },\n  {\n    name: 'Short Delay',\n    type: 'number',\n    unit: 'mm',\n    syncResponses: [\n      {\n        bits6: {\n          part: 0,\n          index: 880\n        },\n        bit7: {\n          part: 0,\n          index: 884,\n          bit: 3\n        },\n        bits8: {\n          part: 0,\n          index: 881\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 49\n        },\n        bit7: {\n          part: 1,\n          index: 52,\n          bit: 4\n        },\n        bits8: {\n          part: 1,\n          index: 50\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 218\n        },\n        bit7: {\n          part: 1,\n          index: 220,\n          bit: 5\n        },\n        bits8: {\n          part: 1,\n          index: 219\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 387\n        },\n        bit7: {\n          part: 1,\n          index: 388,\n          bit: 6\n        },\n        bits8: {\n          part: 1,\n          index: 389\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 557\n        },\n        bit7: {\n          part: 1,\n          index: 564,\n          bit: 0\n        },\n        bits8: {\n          part: 1,\n          index: 558\n        }\n      },\n      {\n        bits6: {\n          part: 1,\n          index: 726\n        },\n        bit7: {\n          part: 1,\n          index: 732,\n          bit: 1\n        },\n        bits8: {\n          part: 1,\n          index: 727\n        }\n      }\n    ],\n    min: 0,\n    max: 4000,\n    step: 2\n  }\n];\n\nmodule.exports = {\n  setupCommands,\n  inputOutputCommands,\n  eqCommands,\n  outputCommands\n};\n","import React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport PropTypes from 'prop-types';\n\nclass Temperature extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    delayUnits: PropTypes.string.isRequired,\n    airTemperature: PropTypes.number.isRequired,\n    isDelayCorrectionOn: PropTypes.bool.isRequired\n  };\n\n  handleValueChange = (event) => {\n    const {onChange, delayUnits} = this.props;\n    const {value} = event.target;\n\n    const unlocalizedValue =\n      delayUnits === 'mm' ? Number(value) : ((value - 32) * 5) / 9;\n\n    onChange({param: 'airTemperature', value: unlocalizedValue});\n  };\n\n  handleCorrectionChange = (isDelayCorrectionOn) => {\n    const {onChange} = this.props;\n    onChange({\n      param: 'isDelayCorrectionOn',\n      value: !isDelayCorrectionOn\n    });\n  };\n\n  render() {\n    const toFahrenheit = (value) => (value * 9) / 5 + 32;\n    const {airTemperature, isDelayCorrectionOn, delayUnits} = this.props;\n    const unit = delayUnits === 'mm' ? 'C' : 'F';\n    const min = delayUnits === 'mm' ? -20 : toFahrenheit(-20);\n    const max = delayUnits === 'mm' ? 50 : toFahrenheit(50);\n    const value =\n      delayUnits === 'mm' ? airTemperature : toFahrenheit(airTemperature);\n    const step = delayUnits === 'mm' ? 1 : 9 / 5;\n\n    const options = [];\n    for (let i = min; i <= max; i += step) {\n      options.push(i.toFixed(1));\n    }\n\n    return (\n      <InputGroup>\n        <FormControl\n          disabled={!isDelayCorrectionOn}\n          value={value.toFixed(1)}\n          as=\"select\"\n          placeholder=\"select\"\n          onChange={this.handleValueChange}\n        >\n          {options.map((option) => (\n            <option key={option} value={option}>\n              {option}\n            </option>\n          ))}\n        </FormControl>\n        <InputGroup.Append>\n          <Button\n            variant={isDelayCorrectionOn ? 'success' : 'primary'}\n            onClick={() => this.handleCorrectionChange(isDelayCorrectionOn)}\n          >\n            °{unit}\n          </Button>\n        </InputGroup.Append>\n      </InputGroup>\n    );\n  }\n}\n\nexport default Temperature;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n\nclass DelayUnits extends PureComponent {\n  static propTypes = {\n    delayUnits: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  state = {delayUnits: this.props.delayUnits};\n\n  handleValueChange = (event) => {\n    const {onChange} = this.props;\n    const {value} = event.target;\n    if (value) {\n      onChange({param: 'airTemperature', value: Number(value)});\n    }\n  };\n\n  handleDelayUnitChange = (delayUnits) => {\n    const {onChange} = this.props;\n    this.setState({delayUnits});\n    onChange({param: 'delayUnits', value: delayUnits});\n  };\n\n  render() {\n    const {delayUnits} = this.state;\n\n    return (\n      <ToggleButtonGroup\n        type=\"radio\"\n        name=\"delay-units\"\n        defaultValue={delayUnits}\n        style={{padding: '10px 0', width: '100%'}}\n        onChange={this.handleDelayUnitChange}\n      >\n        <ToggleButton\n          value=\"mm\"\n          variant={delayUnits === 'mm' ? 'info' : 'primary'}\n          style={{width: '50%'}}\n        >\n          °C / mm\n        </ToggleButton>\n        <ToggleButton\n          value=\"inch\"\n          variant={delayUnits === 'inch' ? 'info' : 'primary'}\n          style={{width: '50%'}}\n        >\n          °F / inch\n        </ToggleButton>\n      </ToggleButtonGroup>\n    );\n  }\n}\n\nexport default DelayUnits;\n","import React, {Component} from 'react';\nimport {FaGlobe} from 'react-icons/fa';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport Temperature from './Temperature';\nimport DelayUnits from './DelayUnits';\n\nclass Localization extends Component {\n  static propTypes = {\n    setup: PropTypes.shape({\n      airTemperature: PropTypes.number.isRequired,\n      isDelayCorrectionOn: PropTypes.bool.isRequired,\n      delayUnits: PropTypes.string.isRequired\n    }).isRequired,\n    isXs: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {setup, isXs} = this.props;\n    return !(isEqual(setup, nextProps.setup) && isXs === nextProps.isXs);\n  }\n\n  render() {\n    const {onChange, setup, isXs} = this.props;\n    const {airTemperature, isDelayCorrectionOn, delayUnits} = setup;\n\n    return (\n      <Nav>\n        <NavDropdown\n          title={<FaGlobe />}\n          drop={isXs ? 'down' : 'up'}\n          className=\"no-caret right-0 icon-menu\"\n        >\n          <div id=\"localization-dropup\">\n            <Temperature\n              airTemperature={airTemperature}\n              isDelayCorrectionOn={isDelayCorrectionOn}\n              delayUnits={delayUnits}\n              onChange={onChange}\n            />\n\n            <DelayUnits delayUnits={delayUnits} onChange={onChange} />\n          </div>\n        </NavDropdown>\n      </Nav>\n    );\n  }\n}\n\nexport default Localization;\n","import React, {PureComponent} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport PropTypes from 'prop-types';\n\nclass DeviceSelect extends PureComponent {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    devices: PropTypes.array.isRequired,\n    free: PropTypes.number.isRequired,\n    selected: PropTypes.number.isRequired,\n    isXs: PropTypes.bool.isRequired\n  };\n\n  render() {\n    const {onSelect, devices, free, selected, isXs} = this.props;\n    const selectedDevice = devices.find(({id}) => id === selected);\n\n    if (devices.length === 0 || !selectedDevice || !free) {\n      return null;\n    }\n\n    const deviceName = `${selectedDevice.id}. ${selectedDevice.name} ${selectedDevice.version} (${free}%)`;\n\n    return (\n      <Nav onSelect={onSelect}>\n        <NavDropdown\n          title={deviceName}\n          drop={isXs ? 'down' : 'up'}\n          className=\"right-0\"\n        >\n          {devices.map(({name, id}, deviceId) => (\n            <NavDropdown.Item key={id} eventKey={deviceId}>\n              {id}. {name}\n            </NavDropdown.Item>\n          ))}\n        </NavDropdown>\n      </Nav>\n    );\n  }\n}\n\nexport default DeviceSelect;\n","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-spinkit';\nimport isEqual from 'lodash.isequal';\nimport {toast} from 'react-toastify';\n\nclass Connection extends Component {\n  state = {networks: [], password: ''};\n  toastOptions = {position: toast.POSITION.BOTTOM_LEFT};\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {networks, selected, password, ip, hostname} = this.state;\n\n    return (\n      !isEqual(networks, nextState.networks) ||\n      selected !== nextState.selected ||\n      password !== nextState.password ||\n      ip !== nextState.ip ||\n      hostname !== nextState.hostname\n    );\n  }\n\n  componentDidMount() {\n    this.fetchConnection();\n    this.fetchNetworks();\n  }\n\n  showFetchError() {\n    if (toast.isActive('fetch-failed')) {\n      return;\n    }\n\n    toast.error(`Fetching WiFi status failed.`, {\n      ...this.toastOptions,\n      toastId: 'fetch-failed'\n    });\n  }\n\n  async fetchConnection() {\n    try {\n      const response = await fetch('/api/connection', {\n        credentials: 'same-origin'\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const connection = await response.json();\n      this.setState({selected: connection.current, ...connection});\n    } catch {\n      this.showFetchError();\n    }\n  }\n\n  async fetchNetworks() {\n    try {\n      const response = await fetch('/api/networks', {\n        credentials: 'same-origin'\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const networks = await response.json();\n      this.setState({networks});\n    } catch {\n      this.showFetchError();\n    }\n  }\n\n  handlePropertyChange(property, event) {\n    this.setState({[property]: event.target.value});\n  }\n\n  async updateConnection() {\n    this.setState({ip: null});\n\n    const {selected, password} = this.state;\n    const formData = new FormData();\n    formData.append('ssid', selected);\n    formData.append('password', password);\n    const data = new URLSearchParams(formData);\n\n    try {\n      const response = await fetch('/api/connection', {\n        method: 'PATCH',\n        body: data,\n        credentials: 'same-origin'\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const connection = await response.json();\n      this.setState({\n        ...connection,\n        selected: connection.current,\n        password: ''\n      });\n    } catch {\n      this.setState({ip: '0.0.0.0'});\n      toast.error(\n        `Could not connect to network ${selected}`,\n        this.toastOptions\n      );\n    }\n  }\n\n  async diconnectConnetion() {\n    try {\n      await fetch('/api/connection', {\n        credentials: 'same-origin',\n        method: 'DELETE'\n      });\n\n      this.updateConnection();\n    } catch {\n      toast.error('WiFi disconnected', this.toastOptions);\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.updateConnection();\n  };\n\n  handleDisconnection = (event) => {\n    event.preventDefault();\n    this.diconnectConnetion();\n  };\n\n  loadingSpinner() {\n    return (\n      <Spinner\n        className=\"text-center\"\n        fadeIn=\"none\"\n        name=\"line-scale\"\n        color=\"#3498DB\"\n      />\n    );\n  }\n\n  connectForm() {\n    const {networks, selected, password} = this.state;\n\n    if (networks.length === 0) {\n      return this.loadingSpinner();\n    }\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Form.Group>\n          <Form.Label>Network</Form.Label>\n          <Form.Control\n            as=\"select\"\n            value={selected}\n            onChange={(event) => this.handlePropertyChange('selected', event)}\n          >\n            {networks.sort().map((enumeral) => (\n              <option key={enumeral}>{enumeral}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            value={password}\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={(event) => this.handlePropertyChange('password', event)}\n          />\n        </Form.Group>\n\n        <Button block type=\"submit\">\n          Connect\n        </Button>\n      </Form>\n    );\n  }\n\n  connectionForm() {\n    const {ip, current} = this.state;\n\n    if (!ip) {\n      return this.loadingSpinner();\n    }\n\n    return (\n      <Form onSubmit={this.handleDisconnection}>\n        <Form.Group>\n          <Form.Label>Network</Form.Label>\n          <Form.Control disabled type=\"text\" value={current} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>IP</Form.Label>\n          <Form.Control disabled type=\"text\" value={ip} />\n        </Form.Group>\n        <Button block type=\"submit\">\n          Disconnect\n        </Button>\n      </Form>\n    );\n  }\n\n  render() {\n    const {current} = this.state;\n    if (!current) {\n      return this.connectForm();\n    }\n\n    return this.connectionForm();\n  }\n}\n\nexport default Connection;\n","import React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-spinkit';\nimport {toast} from 'react-toastify';\n\nclass Settings extends PureComponent {\n  state = {};\n  toastOptions = {position: toast.POSITION.BOTTOM_LEFT};\n\n  componentDidMount() {\n    this.fetchSettings();\n  }\n\n  async fetchSettings() {\n    try {\n      const response = await fetch('/api/settings', {\n        credentials: 'same-origin'\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const {\n        apSsid,\n        apPassword,\n        auth,\n        mdnsHost,\n        flowControl,\n        autoDisableAP\n      } = await response.json();\n\n      const basicAuth = atob(auth.replace('Basic ', '')).split(':');\n      const username = basicAuth[0];\n      const password = basicAuth[1];\n\n      this.setState({\n        username,\n        password,\n        apSsid,\n        apPassword,\n        mdnsHost,\n        flowControl,\n        autoDisableAP,\n        loadingDone: true\n      });\n    } catch {\n      toast.error(`Fetching settings failed.`, {\n        position: toast.POSITION.BOTTOM_LEFT\n      });\n    }\n  }\n\n  handlePropertyChange(property, event) {\n    this.setState({[property]: event.target.value});\n  }\n\n  async updateSettings() {\n    const {\n      username,\n      password,\n      apSsid,\n      apPassword,\n      mdnsHost,\n      flowControl,\n      autoDisableAP\n    } = this.state;\n    const auth = `Basic ${btoa(`${username}:${password}`)}`;\n\n    const formData = new FormData();\n    formData.append('apSsid', apSsid);\n    formData.append('apPassword', apPassword);\n    formData.append('mdnsHost', mdnsHost);\n    formData.append('flowControl', flowControl);\n    formData.append('autoDisableAP', autoDisableAP);\n    formData.append('auth', auth);\n    const data = new URLSearchParams(formData);\n\n    try {\n      const response = await fetch('/api/settings', {\n        method: 'PATCH',\n        body: data,\n        credentials: 'same-origin'\n      });\n\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      toast.info(`Settings saved. Device will reboot now.`, this.toastOptions);\n    } catch {\n      toast.error(`Failed to update settings`, this.toastOptions);\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.updateSettings();\n  };\n\n  loadingSpinner() {\n    return (\n      <Spinner\n        className=\"text-center\"\n        fadeIn=\"none\"\n        name=\"line-scale\"\n        color=\"#3498DB\"\n      />\n    );\n  }\n\n  isFormValid() {\n    const {username, password, apSsid, apPassword, mdnsHost} = this.state;\n\n    return (\n      username.length < 32 &&\n      password.length < 32 &&\n      apSsid.length > 0 &&\n      apSsid.length < 32 &&\n      apPassword.length >= 8 &&\n      apPassword.length < 32 &&\n      mdnsHost.length > 0 &&\n      mdnsHost.length < 32\n    );\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      apSsid,\n      apPassword,\n      mdnsHost,\n      flowControl,\n      autoDisableAP,\n      loadingDone\n    } = this.state;\n\n    if (!loadingDone) {\n      return this.loadingSpinner();\n    }\n\n    return (\n      <Form method=\"POST\" onSubmit={this.handleSubmit}>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Username\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              value={username}\n              placeholder=\"Max 32 chars\"\n              isInvalid={username.length > 32}\n              onChange={(event) => this.handlePropertyChange('username', event)}\n            />\n          </Col>\n        </Form.Group>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Password\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              value={password}\n              placeholder=\"Max 32 chars\"\n              isInvalid={password.length > 32}\n              onChange={(event) => this.handlePropertyChange('password', event)}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Access Point SSID\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              value={apSsid}\n              placeholder=\"Min 1 and max 32 chars\"\n              isInvalid={apSsid.length < 1 || apSsid.length > 32}\n              onChange={(event) => this.handlePropertyChange('apSsid', event)}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Access Point Password\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              value={apPassword}\n              placeholder=\"Min 8 and max 32 chars\"\n              isInvalid={apPassword.length < 8 || apPassword.length > 32}\n              onChange={(event) =>\n                this.handlePropertyChange('apPassword', event)\n              }\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            MDNS Host Name\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              value={mdnsHost}\n              placeholder=\"Min 1 and max 32 chars\"\n              isInvalid={mdnsHost.length < 1 || mdnsHost.length > 32}\n              onChange={(event) => this.handlePropertyChange('mdnsHost', event)}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Hardware Flow Control\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              as=\"select\"\n              value={flowControl}\n              onChange={(event) =>\n                this.handlePropertyChange('flowControl', event)\n              }\n            >\n              <option value=\"0\">Disabled</option>\n              <option value=\"1\">Enabled</option>\n            </FormControl>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Automatically disable AP\n          </Form.Label>\n          <Col sm=\"7\">\n            <FormControl\n              as=\"select\"\n              value={autoDisableAP}\n              onChange={(event) =>\n                this.handlePropertyChange('autoDisableAP', event)\n              }\n            >\n              <option value=\"0\">Disabled</option>\n              <option value=\"1\">Enabled</option>\n            </FormControl>\n          </Col>\n        </Form.Group>\n\n        <Button block type=\"submit\" disabled={!this.isFormValid()}>\n          Save\n        </Button>\n      </Form>\n    );\n  }\n}\n\nexport default Settings;\n","import * as compareVersions from 'compare-versions';\nimport React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Dropzone from 'react-dropzone';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Request from 'superagent';\nimport Spinner from 'react-spinkit';\nimport {toast} from 'react-toastify';\n\nclass Upload extends PureComponent {\n  state = {};\n\n  componentDidMount() {\n    this.fetchVersion();\n    this.fetchReleases();\n  }\n\n  async fetchVersion() {\n    try {\n      const response = await fetch('/api/version', {\n        credentials: 'same-origin'\n      });\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const version = await response.json();\n\n      this.setState({version});\n    } catch {\n      toast.error(`Fetching firmware version failed.`, {\n        position: toast.POSITION.BOTTOM_LEFT\n      });\n    }\n  }\n\n  async fetchReleases() {\n    try {\n      const response = await fetch(\n        'https://api.github.com/repos/lasselukkari/DuinoDCX/releases'\n      );\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const releases = await response.json();\n\n      this.setState({releases});\n    } catch {}\n  }\n\n  handleDrop = (acceptedFiles) => {\n    this.setState({uploading: 'active'});\n\n    Request.post('/api/update')\n      .send(acceptedFiles[0])\n      .on('progress', ({percent}) => this.setState({percent}))\n      .end((err) => {\n        if (err) {\n          this.setState({uploading: 'fail'});\n        } else {\n          this.setState({uploading: 'success'});\n        }\n\n        this.setState({percent: 0});\n      });\n  };\n\n  statusMessage() {\n    const {uploading, percent} = this.state;\n\n    switch (uploading) {\n      case 'active':\n        return (\n          <ProgressBar\n            animated\n            style={{height: '20px'}}\n            variant=\"info\"\n            now={percent}\n            label={`${percent ? percent.toFixed(2) : 0}%`}\n          />\n        );\n      case 'fail':\n        return 'Uploading failed. Check the file and try again.';\n      case 'success':\n        return 'Uploading succeeded. Device will reboot now.';\n      default:\n        return 'Drag and drop a file or click to open the file dialog.';\n    }\n  }\n\n  getNewRelease({version}, releases) {\n    const release = releases[0];\n\n    if (!release) {\n      return;\n    }\n\n    const {browser_download_url: link, name} = release.assets.filter(\n      (asset) => asset.name === `duinodcx-${release.tag_name}.bin`\n    )[0];\n\n    if (!link || !name) {\n      return;\n    }\n\n    return {\n      link,\n      name,\n      isLatest: compareVersions(release.tag_name, version) === 0\n    };\n  }\n\n  static renderRelease(release) {\n    if (release.isLatest) {\n      return <p>Latest firmware installed</p>;\n    }\n\n    return (\n      <div>\n        <p>New release found: {release.name}.</p>\n        <Button href={release.link} variant=\"success\">\n          Download\n        </Button>\n      </div>\n    );\n  }\n\n  render() {\n    const {version, releases} = this.state;\n    let latestRelease;\n\n    if (version && releases) {\n      latestRelease = this.getNewRelease(version, releases);\n    }\n\n    if (!version) {\n      return (\n        <Spinner\n          className=\"text-center\"\n          fadeIn=\"none\"\n          name=\"line-scale\"\n          color=\"#3498DB\"\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Dropzone multiple={false} onDrop={this.handleDrop}>\n          {({getRootProps, getInputProps}) => (\n            <div\n              style={{\n                width: '100%',\n                height: '45px',\n                padding: '10px',\n                borderWidth: 2,\n                borderColor: '#666',\n                borderStyle: 'dashed',\n                borderRadius: 5\n              }}\n              {...getRootProps()}\n            >\n              {this.statusMessage()}\n              <input {...getInputProps()} />\n            </div>\n          )}\n        </Dropzone>\n        <br />\n        <div className=\"text-center\">\n          <p>\n            Current version: {version.version}, {version.buildDate}\n          </p>\n          {latestRelease && Upload.renderRelease(latestRelease)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Upload;\n","import React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {FaCog} from 'react-icons/fa';\nimport Modal from 'react-bootstrap/Modal';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport PropTypes from 'prop-types';\nimport Connection from './Connection';\nimport Settings from './Settings';\nimport Upload from './Upload';\n\nclass Config extends PureComponent {\n  static propTypes = {\n    isXs: PropTypes.bool.isRequired\n  };\n\n  state = {};\n\n  handleShowModal = (showModal) => {\n    this.setState({showModal});\n  };\n\n  render() {\n    const {isXs} = this.props;\n    const {showModal} = this.state;\n\n    return (\n      <Nav>\n        <NavDropdown\n          title={<FaCog />}\n          id=\"nav-dropdown\"\n          drop={isXs ? 'down' : 'up'}\n          className=\"no-caret right-0 icon-menu\"\n        >\n          <NavDropdown.Item\n            eventKey=\"connection\"\n            onSelect={() => this.handleShowModal('connection')}\n          >\n            Wifi Setup\n          </NavDropdown.Item>\n          <NavDropdown.Item\n            eventKey=\"settings\"\n            onSelect={() => this.handleShowModal('settings')}\n          >\n            Settings\n          </NavDropdown.Item>\n          <NavDropdown.Item\n            eventKey=\"upload\"\n            onSelect={() => this.handleShowModal('upload')}\n          >\n            Firmware Update\n          </NavDropdown.Item>\n        </NavDropdown>\n        <Modal\n          show={showModal === 'connection'}\n          onHide={() => this.handleShowModal(false)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Wifi Setup</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Connection />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => this.handleShowModal(false)}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          show={showModal === 'settings'}\n          onHide={() => this.handleShowModal(false)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Settings</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Settings />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => this.handleShowModal(false)}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n        <Modal\n          show={showModal === 'upload'}\n          onHide={() => this.handleShowModal(false)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Firmware Update</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Upload />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button onClick={() => this.handleShowModal(false)}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      </Nav>\n    );\n  }\n}\n\nexport default Config;\n","import React, {Component} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport {withBreakpoints} from 'react-breakpoints';\nimport Localization from './Localization';\nimport DeviceSelect from './DeviceSelect';\nimport Config from './Config';\n\nclass ConfigNavigation extends Component {\n  static defaultProps = {\n    device: {\n      isReady: false,\n      setup: {}\n    },\n    devices: [],\n    selected: null,\n    free: null\n  };\n\n  static propTypes = {\n    device: PropTypes.shape({\n      isReady: PropTypes.bool,\n      setup: PropTypes.object\n    }),\n    devices: PropTypes.array,\n    selected: PropTypes.number,\n    free: PropTypes.number,\n    currentBreakpoint: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSelectDevice: PropTypes.func.isRequired\n  };\n\n  state = {};\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {device, devices, free, currentBreakpoint} = this.props;\n    const {showModal} = this.state;\n\n    return !(\n      isEqual(device, nextProps.device) &&\n      isEqual(devices, nextProps.devices) &&\n      free === nextProps.free &&\n      showModal === nextState.showModal &&\n      currentBreakpoint === nextProps.currentBreakpoint\n    );\n  }\n\n  handleShowModal = (showModal) => {\n    this.setState({showModal});\n  };\n\n  render() {\n    const {\n      device,\n      devices,\n      selected,\n      free,\n      onChange,\n      onSelectDevice,\n      currentBreakpoint\n    } = this.props;\n    const isXs = currentBreakpoint === 'xs';\n\n    return (\n      <Navbar\n        fixed={isXs ? 'top' : 'bottom'}\n        bg=\"primary\"\n        variant=\"dark\"\n        className=\"wide-nav justify-content-end\"\n      >\n        {devices.length > 0 && free && (\n          <DeviceSelect\n            devices={devices}\n            selected={selected}\n            free={free}\n            isXs={isXs}\n            onSelect={onSelectDevice}\n          />\n        )}\n        {device && device.isReady && (\n          <Localization setup={device.setup} isXs={isXs} onChange={onChange} />\n        )}\n        <Config isXs={isXs} />\n      </Navbar>\n    );\n  }\n}\n\nexport default withBreakpoints(ConfigNavigation);\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nclass DefaultTooltipContent extends PureComponent {\n  static defaultProps = {\n    payload: null,\n    label: null,\n    filter: () => true\n  };\n\n  static propTypes = {\n    payload: PropTypes.array,\n    filter: PropTypes.func,\n    label: PropTypes.number\n  };\n\n  renderContent() {\n    const {payload, filter} = this.props;\n\n    if (payload && payload.length > 0) {\n      const items = payload\n        .filter((entry) => filter(entry))\n        .map((entry) => {\n          return (\n            <li\n              key={`tooltip-item-${entry.dataKey}`}\n              className=\"recharts-tooltip-item\"\n              style={{\n                display: 'block',\n                paddingTop: 4,\n                paddingBottom: 4,\n                color: entry.color || '#000'\n              }}\n            >\n              <span className=\"recharts-tooltip-item-name\">{entry.name}</span>\n              <span className=\"recharts-tooltip-item-separator\">: </span>\n              <span className=\"recharts-tooltip-item-value\">\n                {entry.value.toFixed(2)}\n              </span>\n              <span className=\"recharts-tooltip-item-unit\"> {entry.unit}</span>\n            </li>\n          );\n        });\n\n      return (\n        <ul\n          className=\"recharts-tooltip-item-list\"\n          style={{padding: 0, margin: 0}}\n        >\n          {items}\n        </ul>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {label} = this.props;\n\n    return (\n      <div\n        className=\"recharts-default-tooltip\"\n        style={{\n          margin: 0,\n          padding: 10,\n          backgroundColor: '#fff',\n          border: '1px solid #ccc',\n          whiteSpace: 'nowrap'\n        }}\n      >\n        <p className=\"recharts-tooltip-label\" style={{margin: 0}}>\n          {Math.floor(label)} Hz\n        </p>\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n\nexport default DefaultTooltipContent;\n","import {\n  abs,\n  sqrt,\n  complex,\n  log10,\n  pow,\n  pi,\n  add,\n  divide,\n  multiply\n} from 'mathjs';\n\nclass TransferFunction {\n  constructor(frequencyPoints) {\n    this.frequencyPoints = frequencyPoints;\n    this.transferFunction = this.frequencyPoints.map(() => complex(1, 0));\n  }\n\n  static generateFrequencyPoints(startFrequency, endFrequency, count) {\n    const freqData = [];\n    for (let i = 0; i < count; i++) {\n      const frequency =\n        log10(startFrequency) +\n        (i * log10(endFrequency / startFrequency)) / (count - 1);\n      freqData[i] = pow(10, frequency);\n    }\n\n    return freqData;\n  }\n\n  firstOrderFilter(f0, isHighPass) {\n    const w0 = 2 * pi * f0;\n\n    this.apply(\n      this.frequencyPoints.map((frequencyPoint) => {\n        const w = 2 * pi * frequencyPoint;\n        const s = complex(0, w);\n        const giveMeName = add(divide(s, w0), 1);\n\n        if (isHighPass) {\n          return multiply(divide(1, giveMeName), divide(s, w0));\n        }\n\n        return divide(1, giveMeName);\n      })\n    );\n  }\n\n  secondOrderFilter(f0, Q, isHighpass) {\n    const w0 = 2 * pi * f0;\n\n    this.apply(\n      this.frequencyPoints.map((frequencyPoint) => {\n        const w = 2 * pi * frequencyPoint;\n        const s = complex(0, w);\n        const giveMeName = divide(\n          pow(w0, 2),\n          add(add(pow(s, 2), divide(multiply(s, w0), Q)), pow(w0, 2))\n        );\n\n        if (isHighpass) {\n          return multiply(divide(pow(s, 2), pow(w0, 2)), giveMeName);\n        }\n\n        return giveMeName;\n      })\n    );\n  }\n\n  getMagnitude() {\n    return this.transferFunction.map((point) => 20 * log10(point.toPolar().r));\n  }\n\n  getAngle() {\n    return this.transferFunction.map((point) =>\n      divide(180 * point.toPolar().phi, pi)\n    );\n  }\n\n  static multiplyVectors(points1, points2) {\n    return points1.map((point, index) => multiply(point, points2[index]));\n  }\n\n  getGroupDelay() {\n    const angle = this.getAngle();\n    const angUw = TransferFunction.unwrapPhase(angle).map(\n      (number) => (number * 1000) / 360\n    );\n\n    const diff = [];\n    for (let j = 0; j < angle.length - 1; j++) {\n      diff[j] =\n        (angUw[j + 1] - angUw[j]) /\n        (this.frequencyPoints[j + 1] - this.frequencyPoints[j]);\n    }\n\n    diff.push(diff[diff.length - 1]);\n\n    return diff.map((number) => -1 * number);\n  }\n\n  static unwrapPhase(angle) {\n    const angleNew = [];\n    let wrapcount = 0;\n    angleNew[0] = angle[0];\n    for (let j = 1; j < angle.length; j++) {\n      if (angle[j] - angle[j - 1] > 180) {\n        wrapcount++;\n      }\n\n      angleNew[j] = angle[j] - wrapcount * 360;\n    }\n\n    return angleNew;\n  }\n\n  parametricEQ(f0, g, q) {\n    const w0 = 2 * pi * f0;\n    const K = pow(10, divide(g, 40));\n    const A = w0 / q / K;\n    const B = (K * w0) / q;\n\n    this.apply(\n      this.frequencyPoints.map((frequenzy) => {\n        const w = 2 * pi * frequenzy;\n        const s = complex(0, w);\n        const nom = add(add(pow(s, 2), multiply(B, s)), pow(w0, 2));\n        const denom = add(add(pow(s, 2), multiply(A, s)), pow(w0, 2));\n        return divide(nom, denom);\n      })\n    );\n  }\n\n  firstOrderShelving(f0, gain, isHighShelving) {\n    const w0 = 2 * pi * f0;\n    this.apply(\n      this.frequencyPoints.map((frequenzy) => {\n        const w = 2 * pi * frequenzy;\n        const s = complex(0, w);\n        let nom;\n\n        if (isHighShelving) {\n          nom = add(multiply(s, pow(10, abs(gain) / 20)), w0);\n        } else {\n          nom = add(s, multiply(w0, pow(10, abs(gain) / 20)));\n        }\n\n        const denom = add(s, w0);\n\n        if (gain > 0) {\n          return divide(nom, denom);\n        }\n\n        if (gain < 0) {\n          return divide(denom, nom);\n        }\n\n        return 1;\n      })\n    );\n  }\n\n  secondOrderShelving(f0, gain, isHighShelving) {\n    const w0 = 2 * pi * f0;\n    const gainAbs = pow(10, abs(gain) / 20);\n    this.apply(\n      this.frequencyPoints.map((frequenzy) => {\n        const w = 2 * pi * frequenzy;\n        const s = complex(0, w);\n\n        let temporary1;\n        if (isHighShelving) {\n          temporary1 = multiply(gainAbs, pow(s, 2));\n        } else {\n          temporary1 = multiply(gainAbs, pow(w0, 2));\n        }\n\n        const temporary2 = add(temporary1, multiply(sqrt(2 * gainAbs) * w0, s));\n\n        let nom;\n        if (isHighShelving) {\n          nom = add(temporary2, pow(w0, 2));\n        } else {\n          nom = add(temporary2, pow(s, 2));\n        }\n\n        const denom = add(\n          add(pow(s, 2), multiply(sqrt(2) * w0, s)),\n          pow(w0, 2)\n        );\n\n        if (gain > 0) {\n          return divide(nom, denom);\n        }\n\n        if (gain < 0) {\n          return divide(denom, nom);\n        }\n\n        return 1;\n      })\n    );\n  }\n\n  apply(transferFunction) {\n    this.transferFunction = TransferFunction.multiplyVectors(\n      this.transferFunction,\n      transferFunction\n    );\n  }\n\n  applyCrosover(type, f0, isHighpass) {\n    switch (type) {\n      case 'but6': {\n        this.firstOrderFilter(f0, isHighpass);\n        break;\n      }\n\n      case 'but12': {\n        this.secondOrderFilter(f0, 0.707107, isHighpass);\n        break;\n      }\n\n      case 'but18': {\n        this.firstOrderFilter(f0, isHighpass);\n        this.secondOrderFilter(f0, 1, isHighpass);\n        break;\n      }\n\n      case 'but24': {\n        this.secondOrderFilter(f0, 0.5412, isHighpass);\n        this.secondOrderFilter(f0, 1.3065, isHighpass);\n        break;\n      }\n\n      case 'but48': {\n        this.secondOrderFilter(f0, 0.5089, isHighpass);\n        this.secondOrderFilter(f0, 0.6013, isHighpass);\n        this.secondOrderFilter(f0, 0.9, isHighpass);\n        this.secondOrderFilter(f0, 2.5628, isHighpass);\n        break;\n      }\n\n      case 'bes12': {\n        const fk1 = isHighpass ? 1 / 1.254 : 1.254;\n        this.secondOrderFilter(fk1 * f0, 0.577, isHighpass);\n        break;\n      }\n\n      case 'bes24': {\n        const fk1 = isHighpass ? 1 / 1.4192 : 1.4192;\n        const fk2 = isHighpass ? 1 / 1.5912 : 1.5912;\n        this.secondOrderFilter(fk1 * f0, 0.5219, isHighpass);\n        this.secondOrderFilter(fk2 * f0, 0.8055, isHighpass);\n        break;\n      }\n\n      case 'lr12': {\n        this.secondOrderFilter(f0, 0.5, isHighpass);\n        break;\n      }\n\n      case 'lr24': {\n        this.secondOrderFilter(f0, 0.707107, isHighpass);\n        this.secondOrderFilter(f0, 0.707107, isHighpass);\n        break;\n      }\n\n      case 'lr48': {\n        this.secondOrderFilter(f0, 0.54, isHighpass);\n        this.secondOrderFilter(f0, 1.34, isHighpass);\n        this.secondOrderFilter(f0, 0.54, isHighpass);\n        this.secondOrderFilter(f0, 1.34, isHighpass);\n        break;\n      }\n\n      default: {\n        this.apply(this.frequencyPoints.map(() => 1));\n      }\n    }\n  }\n}\n\nexport default TransferFunction;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport windowSize from 'react-window-size';\nimport {withBreakpoints} from 'react-breakpoints';\nimport {AreaChart, Area, XAxis, YAxis, Tooltip} from 'recharts';\nimport PlotTooltip from './PlotTooltip';\nimport TransferFunction from './TransferFunction';\n\nconst frequencyPoints = TransferFunction.generateFrequencyPoints(\n  10,\n  20000,\n  250\n);\n\nclass CrossoverPlot extends Component {\n  static propTypes = {\n    channels: PropTypes.object.isRequired,\n    isGainApplied: PropTypes.bool.isRequired,\n    windowWidth: PropTypes.number.isRequired,\n    currentBreakpoint: PropTypes.string.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      channels,\n      isGainApplied,\n      windowWidth,\n      currentBreakpoint\n    } = this.props;\n\n    if (!isEqual(channels, nextProps.channels)) {\n      return true;\n    }\n\n    if (isGainApplied !== nextProps.isGainApplied) {\n      return true;\n    }\n\n    if (\n      nextProps.currentBreakpoint === 'xs' &&\n      windowWidth !== nextProps.windowWidth\n    ) {\n      return true;\n    }\n\n    if (currentBreakpoint !== nextProps.currentBreakpoint) {\n      return true;\n    }\n\n    return false;\n  }\n\n  createPlotData(channels, isGainApplied) {\n    const values = Object.keys(channels).map((key, index) => {\n      const tf = new TransferFunction(frequencyPoints);\n\n      const {\n        highpassFilter,\n        highpassFrequency,\n        lowpassFilter,\n        lowpassFrequency,\n        gain\n      } = channels[key];\n      tf.applyCrosover(highpassFilter, highpassFrequency, true);\n      tf.applyCrosover(lowpassFilter, lowpassFrequency, false);\n\n      return {\n        data: tf.getMagnitude(),\n        channel: `${index + 1}. ${channels[key].channelName}`,\n        gain\n      };\n    });\n\n    return frequencyPoints.map((hz, index) => {\n      const result = {hz};\n\n      values.forEach((value) => {\n        const rounded = Math.round(value.data[index] * 100) / 100;\n        result[value.channel] = isGainApplied ? rounded + value.gain : rounded;\n      });\n\n      return result;\n    });\n  }\n\n  render() {\n    const {\n      channels,\n      isGainApplied,\n      windowWidth,\n      currentBreakpoint\n    } = this.props;\n    const colors = [\n      '#307473',\n      '#7A82AB',\n      '#F0F3BD',\n      '#375a7f',\n      '#18BC9C',\n      '#3498DB',\n      '#F39C12',\n      '#E74C3C',\n      '#95A5A6'\n    ];\n\n    let width;\n\n    switch (currentBreakpoint) {\n      case 'sm':\n        width = 480;\n        break;\n      case 'md':\n        width = 660;\n        break;\n      case 'lg':\n        width = 900;\n        break;\n      case 'xl':\n        width = 1080;\n        break;\n      default:\n        width = windowWidth - 60;\n    }\n\n    const height = width * 0.33;\n\n    return (\n      <AreaChart\n        data={this.createPlotData(channels, isGainApplied)}\n        width={width}\n        height={height}\n        baseValue=\"dataMin\"\n        margin={{top: 20, right: 10, bottom: 5, left: -30}}\n      >\n        <XAxis dataKey=\"hz\" tickFormatter={(tick) => Math.round(tick)} />\n        <YAxis\n          allowDataOverflow\n          type=\"number\"\n          domain={[-20, isGainApplied ? 'auto' : 5]}\n        />\n        <Tooltip content={<PlotTooltip filter={({value}) => value > -20} />} />\n        {Object.keys(channels).map((channelId, index) => (\n          <Area\n            key={channelId}\n            type=\"monotone\"\n            dataKey={`${index + 1}. ${channels[channelId].channelName}`}\n            strokeWidth={3}\n            stroke={colors[index]}\n            fill={colors[index]}\n            fillOpacity={0.2}\n            unit=\"dB\"\n          />\n        ))}\n      </AreaChart>\n    );\n  }\n}\n\nexport default windowSize(withBreakpoints(CrossoverPlot));\n","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport CrossoverPlot from './plots/CrossoverPlot';\n\nclass CrossoverPlotPanel extends Component {\n  static propTypes = {\n    channels: PropTypes.object.isRequired\n  };\n\n  state = {\n    isGainApplied: false\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {channels} = this.props;\n    const {isGainApplied} = this.state;\n    return !(\n      isGainApplied === nextState.isGainApplied &&\n      isEqual(channels, nextProps.channels)\n    );\n  }\n\n  handleToggleGain = () => {\n    this.setState((previousState) => ({\n      isGainApplied: !previousState.isGainApplied\n    }));\n  };\n\n  render() {\n    const {channels} = this.props;\n    return (\n      <Card>\n        <Card.Header>\n          Crossover Frequency Response\n          <Button\n            size=\"sm\"\n            className=\"header-button\"\n            variant={this.state.isGainApplied ? 'success' : 'dark'}\n            onClick={this.handleToggleGain}\n          >\n            Apply Gain\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <CrossoverPlot\n            channels={channels}\n            isGainApplied={this.state.isGainApplied}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CrossoverPlotPanel;\n","const constants = require('./constants');\nconst commands = require('./commands');\n\nclass Parser {\n  static camelize(string) {\n    return string.replace(/^\\w|[A-Z]|\\b\\w|\\s+/g, (match, index) => {\n      if (Number(match) === 0) {\n        return '';\n      }\n\n      return index === 0 ? match.toLowerCase() : match.toUpperCase();\n    });\n  }\n\n  static reverseCommandData({type, min, step, values}, value) {\n    if (type === 'bool') {\n      return value !== 0;\n    }\n\n    if (type === 'enum') {\n      return values[value];\n    }\n\n    if (type === 'number') {\n      return min + step * value;\n    }\n  }\n\n  static getCommandData({type, min, step, values}, parameter) {\n    if (type === 'bool') {\n      return parameter ? 1 : 0;\n    }\n\n    if (type === 'enum') {\n      return values.indexOf(parameter);\n    }\n\n    if (type === 'number') {\n      return Math.round(Math.abs(min - parameter) / step);\n    }\n  }\n\n  static hexStringToByte(string) {\n    const a = [];\n    for (let i = 0, length = string.length; i < length; i += 2) {\n      a.push(Number.parseInt(string.slice(i, i + 2), 16));\n    }\n\n    return new Uint8Array(a);\n  }\n\n  static clearBit(number, index) {\n    return number & ~(1 << index);\n  }\n\n  static isBitSet(number, index) {\n    return (number & (1 << index)) !== 0;\n  }\n\n  static toPaddedHex(number, length) {\n    let hex = number.toString(16);\n\n    while (hex.length < length) {\n      hex = '0' + hex;\n    }\n\n    return hex.toUpperCase();\n  }\n\n  static getValue(parts, {bits6, bit7, bits8}) {\n    let value = parts[bits6.part][bits6.index];\n\n    if (bit7) {\n      const data = parts[bit7.part];\n      value += Parser.isBitSet(data[bit7.index], bit7.bit) ? 128 : 0;\n    }\n\n    if (bits8) {\n      const data = parts[bits8.part];\n      value += data[bits8.index] * 256;\n    }\n\n    return value;\n  }\n\n  static parseDevices(devices) {\n    const messages = [];\n    let newMessage = [];\n\n    devices.forEach((hex) => {\n      if (hex === 247) {\n        messages.push(newMessage);\n        newMessage = [];\n      } else {\n        newMessage.push(hex);\n      }\n    });\n\n    return messages.map((message) => ({\n      id: message[4],\n      version: Number.parseFloat(`${message[7]}.${message[8]}`),\n      name: message\n        .slice(9, 25)\n        .map((number) => String.fromCharCode(number))\n        .join('')\n        .trim()\n    }));\n  }\n\n  static parseDevice(parts) {\n    const state = {setup: {}, inputs: {}, outputs: {}};\n\n    constants.CHANNELS.forEach((channelId, index) => {\n      const group = index < 4 ? 'inputs' : 'outputs';\n      state[group][channelId] = {\n        eqs: {1: {}, 2: {}, 3: {}, 4: {}, 5: {}, 6: {}, 7: {}, 8: {}, 9: {}}\n      };\n    });\n\n    commands.setupCommands.forEach((command) => {\n      const parameterName = Parser.camelize(command.name);\n      const value = Parser.getValue(parts, command.syncResponse);\n      state.setup[parameterName] = Parser.reverseCommandData(command, value);\n    });\n\n    commands.inputOutputCommands.forEach((command) => {\n      command.syncResponses.forEach((syncResponse, index) => {\n        const group = index < 4 ? 'inputs' : 'outputs';\n        const id = constants.CHANNELS[index];\n        const parameterName = Parser.camelize(command.name);\n        const value = Parser.getValue(parts, syncResponse);\n\n        state[group][id][parameterName] = Parser.reverseCommandData(\n          command,\n          value\n        );\n      });\n    });\n\n    commands.outputCommands.forEach((command) => {\n      command.syncResponses.forEach((syncResponse, index) => {\n        const id = constants.OUTPUTS[index];\n        const parameterName = Parser.camelize(command.name);\n        const value = Parser.getValue(parts, syncResponse);\n\n        state.outputs[id][parameterName] = Parser.reverseCommandData(\n          command,\n          value\n        );\n      });\n    });\n\n    commands.eqCommands.forEach((command) => {\n      constants.CHANNELS.forEach((channelId, ioIndex) => {\n        for (let eqIndex = 0; eqIndex < 9; eqIndex++) {\n          const group = ioIndex < 4 ? 'inputs' : 'outputs';\n          const eq = eqIndex + 1;\n          const parameterName = Parser.camelize(command.name);\n          const syncResponse = command.syncResponses[ioIndex * 9 + eqIndex];\n          const value = Parser.getValue(parts, syncResponse);\n\n          state[group][channelId].eqs[eq][\n            parameterName\n          ] = Parser.reverseCommandData(command, value);\n        }\n      });\n    });\n\n    return state;\n  }\n\n  static parseStatus(pingResponse) {\n    const buffer = new Uint8Array(pingResponse);\n\n    const inputs = ['A', 'B', 'C'].map((name, index) => {\n      const data = buffer[index + 8];\n\n      const level = Parser.clearBit(data, 5);\n      const isLimited = Parser.isBitSet(data, 5);\n\n      return {name, level, isLimited};\n    });\n\n    const outputs = constants.OUTPUTS.map((name, index) => {\n      const data = buffer[index + 11];\n      const level = Parser.clearBit(data, 5);\n      const isLimited = Parser.isBitSet(data, 5);\n\n      return {name, level, isLimited};\n    });\n\n    const free = buffer[21];\n\n    return {inputs, outputs, free};\n  }\n\n  static parseState(state) {\n    const buffer = new Uint8Array(state);\n    const selected = Number(buffer.slice(0, 1));\n    const part0Buffer = buffer.slice(1, 1016);\n    const part1buffer = buffer.slice(1016, 1927);\n    const devicesBuffer = buffer.slice(1927);\n    const device = Parser.parseDevice([part0Buffer, part1buffer]);\n    const devices = Parser.parseDevices(devicesBuffer);\n\n    device.isReady = devices.some(({id}) => id === selected);\n\n    return {selected, device, devices};\n  }\n\n  static serializeCommands(deviceId, device, data) {\n    const commands = Array.isArray(data) ? data : [data];\n    const commandBuffer = commands\n      .map((command) => Parser[command.param](device, command))\n      .join('');\n\n    const command = `F0002032${Parser.toPaddedHex(\n      deviceId,\n      2\n    )}0E20${Parser.toPaddedHex(commands.length, 2)}${commandBuffer}F7`;\n\n    return Parser.hexStringToByte(command);\n  }\n\n  static serialize(target, parameter, data) {\n    const hexTarget = Parser.toPaddedHex(target, 2);\n    const hexParameter = Parser.toPaddedHex(parameter, 2);\n    const valueLow = Parser.toPaddedHex(Math.round(data % 128), 2);\n    const valueHigh = Parser.toPaddedHex(Math.floor(data / 128), 2);\n\n    return `${hexTarget}${hexParameter}${valueHigh}${valueLow}`;\n  }\n}\n\ncommands.setupCommands.forEach((command, index) => {\n  const camelName = Parser.camelize(command.name);\n\n  Parser[camelName] = function (device, {value}) {\n    const data = Parser.getCommandData(command, value);\n    const commandNumber = index + (index > 9 ? 10 : 2);\n    device.setup[camelName] = value;\n\n    return Parser.serialize(0, commandNumber, data);\n  };\n});\n\ncommands.inputOutputCommands.forEach((command, index) => {\n  const camelName = Parser.camelize(command.name);\n\n  Parser[camelName] = function (device, {group, channelId, value}) {\n    const channelNumber =\n      group === 'inputs'\n        ? constants.INPUTS.indexOf(channelId) + 1\n        : constants.OUTPUTS.indexOf(channelId) + 5;\n    const commandNumber = index + 2;\n    const data = Parser.getCommandData(command, value);\n    device[group][channelId][camelName] = value;\n\n    return Parser.serialize(channelNumber, commandNumber, data);\n  };\n});\n\ncommands.eqCommands.forEach((command, index) => {\n  const camelName = Parser.camelize(command.name);\n\n  Parser[camelName] = function (device, {group, channelId, eq, value}) {\n    const channelNumber =\n      group === 'inputs'\n        ? constants.INPUTS.indexOf(channelId) + 1\n        : constants.OUTPUTS.indexOf(channelId) + 5;\n\n    const commandNumber = index + (eq - 1) * 5 + 19;\n    const data = Parser.getCommandData(command, value);\n    device[group][channelId].eqs[eq][camelName] = value;\n\n    return Parser.serialize(channelNumber, commandNumber, data);\n  };\n});\n\ncommands.outputCommands.forEach((command, index) => {\n  const camelName = Parser.camelize(command.name);\n\n  Parser[camelName] = function (device, {channelId, value}) {\n    const data = Parser.getCommandData(command, value);\n    const output = constants.OUTPUTS.indexOf(channelId) + 5;\n    const commandNumber = index + 64;\n    device.outputs[channelId][camelName] = value;\n\n    return Parser.serialize(output, commandNumber, data);\n  };\n});\n\nParser.commands = commands;\n\nexport default Parser;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nclass BoolParameter extends Component {\n  static defaultProps = {\n    label: null,\n    hasLabel: false,\n    isInverted: false,\n    channelId: null,\n    eq: null,\n    group: null\n  };\n\n  static propTypes = {\n    isTrue: PropTypes.bool.isRequired,\n    isInverted: PropTypes.bool,\n    param: PropTypes.string.isRequired,\n    group: PropTypes.string,\n    channelId: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    eq: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string,\n    hasLabel: PropTypes.bool\n  };\n\n  handleClick = () => {\n    const {param, group, channelId, eq, onChange, isTrue} = this.props;\n\n    onChange({param, group, channelId, eq, value: !isTrue});\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {isTrue} = this.props;\n    return isTrue !== nextProps.isTrue;\n  }\n\n  render() {\n    const {name, isTrue, isInverted, hasLabel, label} = this.props;\n    const onColor = isInverted ? 'danger' : 'success';\n\n    return (\n      <Form>\n        <FormGroup>\n          {(label || hasLabel !== false) && (\n            <Form.Label>\n              {label ? label : name}\n              <br />\n            </Form.Label>\n          )}\n\n          <Button\n            block\n            variant={isTrue ? onColor : 'primary'}\n            active={isTrue}\n            onClick={this.handleClick}\n          >\n            {isTrue ? 'On' : 'Off'}\n          </Button>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default BoolParameter;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\n\nclass EnumParameter extends Component {\n  static defaultProps = {\n    hasLabel: false,\n    eq: null,\n    channelId: null,\n    group: null,\n    unit: null\n  };\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    unit: PropTypes.string,\n    enums: PropTypes.arrayOf(PropTypes.string).isRequired,\n    param: PropTypes.string.isRequired,\n    group: PropTypes.string,\n    channelId: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    eq: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    hasLabel: PropTypes.bool\n  };\n\n  handleValueChange = (event) => {\n    const {param, group, channelId, eq, onChange} = this.props;\n    onChange({param, group, channelId, eq, value: event.target.value});\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {value} = this.props;\n    return value !== nextProps.value;\n  }\n\n  render() {\n    const {name, value, enums, unit, hasLabel} = this.props;\n    return (\n      <Form.Group>\n        {hasLabel !== false && (\n          <Form.Label>\n            {name} {unit && `(${unit})`}\n          </Form.Label>\n        )}\n        <Form.Control\n          as=\"select\"\n          placeholder=\"select\"\n          value={value}\n          onChange={this.handleValueChange}\n        >\n          {enums.map((enumeral) => (\n            <option key={enumeral}>{enumeral}</option>\n          ))}\n        </Form.Control>\n      </Form.Group>\n    );\n  }\n}\n\nexport default EnumParameter;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from 'react-bootstrap/FormGroup';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport Button from 'react-bootstrap/Button';\nimport Dialog from 'react-bootstrap-dialog';\nimport Slider, {createSliderWithTooltip} from 'rc-slider';\nimport {FaPlus, FaMinus} from 'react-icons/fa';\n\nimport './NumberParameter.css';\nimport 'rc-slider/assets/index.css';\n\nconst SliderWithTooltip = createSliderWithTooltip(Slider);\n\nclass NumberParameter extends Component {\n  static getDerivedStateFromProps(nextProps, previousState) {\n    if (previousState.moving !== true) {\n      return {value: nextProps.value};\n    }\n\n    return null;\n  }\n\n  static defaultProps = {\n    formatter: (value, unit) =>\n      `${Math.round(value * 10) / 10} ${unit ? unit : ''}`,\n    labelFormatter: (value) => value.toString(),\n    hasLabel: false,\n    group: null,\n    eq: null,\n    channelId: null\n  };\n\n  static propTypes = {\n    value: PropTypes.number.isRequired,\n    unit: PropTypes.string.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    step: PropTypes.number.isRequired,\n    formatter: PropTypes.func,\n    param: PropTypes.string.isRequired,\n    group: PropTypes.string,\n    channelId: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    eq: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    hasLabel: PropTypes.bool,\n    labelFormatter: PropTypes.func\n  };\n\n  state = {\n    value: this.props.value\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {value, unit, formatter} = this.props;\n\n    return (\n      formatter(value, unit) !==\n        nextProps.formatter(nextProps.value, nextProps.unit) ||\n      nextState.value !== this.state.value\n    );\n  }\n\n  handleOnBeforeChange = () => this.setState({moving: true});\n\n  handleOnChange = (value) => this.setState({value});\n\n  showConfirmChange = ({oldValue, newValue, name, unit, formatter}) => {\n    return new Promise((resolve, reject) => {\n      if (newValue <= oldValue) {\n        return resolve();\n      }\n\n      this.dialog.show({\n        title: 'Confirm change',\n        body: (\n          <div style={{textAlign: 'center'}}>\n            <p>\n              You are about to change {name.toLowerCase()} from{' '}\n              {formatter(oldValue, unit)} to {formatter(newValue, unit)}.\n            </p>\n            <p>\n              This is {formatter(newValue - oldValue, unit)} increase. Are you\n              sure?\n            </p>\n          </div>\n        ),\n        bsSize: 'md',\n        actions: [\n          Dialog.CancelAction(() => reject()), // eslint-disable-line new-cap\n          Dialog.OKAction(() => resolve()) // eslint-disable-line new-cap\n        ],\n        onHide: () => {}\n      });\n    });\n  };\n\n  async confirmChange(newValue) {\n    const {\n      name,\n      unit,\n      param,\n      group,\n      channelId,\n      eq,\n      onChange,\n      value: oldValue,\n      formatter\n    } = this.props;\n\n    if (newValue.toFixed(3) === oldValue.toFixed(3)) {\n      return this.setState({moving: false});\n    }\n\n    try {\n      await this.showConfirmChange({oldValue, newValue, unit, name, formatter});\n      onChange({param, group, channelId, eq, value: newValue});\n    } catch {\n      this.setState({moving: false, value: oldValue});\n    }\n  }\n\n  handleOnAfterChange = (newValue) => this.confirmChange(newValue);\n\n  handleReduction = () => {\n    const {\n      value,\n      min,\n      step,\n      param,\n      group,\n      channelId,\n      eq,\n      onChange\n    } = this.props;\n    if (value - step >= min) {\n      onChange({param, group, channelId, eq, value: value - step});\n    }\n  };\n\n  handleAddition = () => {\n    const {\n      value,\n      max,\n      step,\n      param,\n      group,\n      channelId,\n      eq,\n      onChange\n    } = this.props;\n    if (value + step <= max) {\n      onChange({param, group, channelId, eq, value: value + step});\n    }\n  };\n\n  render() {\n    const {\n      name,\n      unit,\n      value,\n      min,\n      max,\n      step,\n      hasLabel,\n      formatter,\n      labelFormatter\n    } = this.props;\n\n    const marks = {\n      [min.toString()]: {\n        style: {marginTop: '3px'},\n        label: labelFormatter(min, unit)\n      },\n      [max.toString()]: {\n        style: {marginTop: '3px'},\n        label: labelFormatter(max, unit)\n      }\n    };\n\n    const handlerStyle = {\n      height: 30,\n      width: 30,\n      marginTop: -15\n    };\n\n    return (\n      <FormGroup>\n        {hasLabel !== false && (\n          <FormLabel>\n            {name}\n            <br />\n          </FormLabel>\n        )}\n\n        <div className=\"number-param-container\">\n          <div className=\"min-number\">\n            <Button onClick={this.handleReduction}>\n              <FaMinus />\n            </Button>\n          </div>\n          <div className=\"slider\">\n            <div className=\"slider-container\">\n              <SliderWithTooltip\n                value={this.state.value}\n                handleStyle={handlerStyle}\n                marks={marks}\n                max={max}\n                min={min}\n                step={step}\n                tipFormatter={(value) => formatter(value, unit)}\n                onChange={this.handleOnChange}\n                onBeforeChange={this.handleOnBeforeChange}\n                onAfterChange={this.handleOnAfterChange}\n              />\n            </div>\n            <div className=\"current-value\">{formatter(value, unit)}</div>\n          </div>\n          <div className=\"max-number\">\n            <Button onClick={this.handleAddition}>\n              <FaPlus />\n            </Button>\n          </div>\n        </div>\n        <Dialog\n          ref={(element) => {\n            this.dialog = element;\n          }}\n        />\n      </FormGroup>\n    );\n  }\n}\n\nexport default NumberParameter;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport Parser from '../dcx2496/parser';\nimport BoolParameter from './BoolParameter';\nimport EnumParameter from './EnumParameter';\nimport NumberParameter from './NumberParameter';\n\nconst components = {};\nconst commandTypes = {\n  SETUP_COMMAND: 0,\n  EQ_COMMAND: 1,\n  IO_COMMAND: 2,\n  OUTPUT_COMMAND: 3\n};\n\nconst enumComponent = function ({name, unit, values}, type) {\n  class EnumComponent extends PureComponent {\n    static propTypes = {\n      value: PropTypes.string.isRequired,\n      group: PropTypes.string,\n      channelId: PropTypes.string,\n      onChange: PropTypes.func.isRequired,\n      eq: PropTypes.string,\n      hasLabel: PropTypes.bool\n    };\n\n    static defaultProps = {\n      hasLabel: false,\n      eq: null,\n      channelId: null,\n      group: null\n    };\n\n    render() {\n      const {value, group, channelId, eq, onChange, hasLabel} = this.props;\n      return (\n        <EnumParameter\n          name={name}\n          type={type}\n          unit={unit}\n          value={value}\n          param={Parser.camelize(name)}\n          group={group}\n          channelId={channelId}\n          eq={eq}\n          enums={values}\n          hasLabel={hasLabel}\n          onChange={onChange}\n        />\n      );\n    }\n  }\n\n  return EnumComponent;\n};\n\nconst boolComponent = function ({name}, type) {\n  class BoolComponent extends PureComponent {\n    static defaultProps = {\n      hasLabel: false,\n      label: null,\n      isInverted: false,\n      eq: null,\n      group: null,\n      channelId: null\n    };\n\n    static propTypes = {\n      isTrue: PropTypes.bool.isRequired,\n      isInverted: PropTypes.bool,\n      group: PropTypes.string,\n      channelId: PropTypes.string,\n      onChange: PropTypes.func.isRequired,\n      eq: PropTypes.string,\n      hasLabel: PropTypes.bool,\n      label: PropTypes.string\n    };\n\n    render() {\n      const {\n        isTrue,\n        group,\n        channelId,\n        eq,\n        isInverted,\n        onChange,\n        hasLabel,\n        label\n      } = this.props;\n      return (\n        <BoolParameter\n          name={name}\n          type={type}\n          isTrue={isTrue}\n          param={Parser.camelize(name)}\n          group={group}\n          channelId={channelId}\n          eq={eq}\n          isInverted={isInverted}\n          hasLabel={hasLabel}\n          label={label}\n          onChange={onChange}\n        />\n      );\n    }\n  }\n\n  return BoolComponent;\n};\n\nconst numberComponent = function ({name, unit, min, max, step}, type) {\n  class NumberComponent extends PureComponent {\n    static defaultProps = {\n      formatter: (value, unit) =>\n        `${Math.round(value * 10) / 10} ${unit ? unit : ''}`,\n      labelFormatter: (value) => value.toString(),\n      hasLabel: false,\n      eq: null,\n      group: null,\n      channelId: null\n    };\n\n    static propTypes = {\n      value: PropTypes.number.isRequired,\n      formatter: PropTypes.func,\n      group: PropTypes.string,\n      channelId: PropTypes.string,\n      onChange: PropTypes.func.isRequired,\n      eq: PropTypes.string,\n      hasLabel: PropTypes.bool,\n      labelFormatter: PropTypes.func\n    };\n\n    render() {\n      const {\n        value,\n        group,\n        channelId,\n        eq,\n        onChange,\n        formatter,\n        hasLabel,\n        labelFormatter\n      } = this.props;\n      return (\n        <NumberParameter\n          name={name}\n          type={type}\n          unit={unit}\n          value={value}\n          param={Parser.camelize(name)}\n          group={group}\n          channelId={channelId}\n          min={min}\n          max={max}\n          step={step}\n          eq={eq}\n          hasLabel={hasLabel}\n          formatter={formatter}\n          labelFormatter={labelFormatter}\n          onChange={onChange}\n        />\n      );\n    }\n  }\n\n  return NumberComponent;\n};\n\nconst createComponent = (commmand) => {\n  if (commmand.type === 'enum') {\n    return enumComponent(commmand);\n  }\n\n  if (commmand.type === 'bool') {\n    return boolComponent(commmand);\n  }\n\n  if (commmand.type === 'number') {\n    return numberComponent(commmand);\n  }\n};\n\nconst squeeze = (word) => word.replace(/\\s/g, '');\n\nParser.commands.setupCommands.forEach((command) => {\n  components[squeeze(command.name)] = createComponent(command);\n});\n\nParser.commands.inputOutputCommands.forEach((command) => {\n  components[squeeze(command.name)] = createComponent(command);\n});\n\nParser.commands.eqCommands.forEach((command) => {\n  components[squeeze(command.name)] = createComponent(command);\n});\n\nParser.commands.outputCommands.forEach((command) => {\n  components[squeeze(command.name)] = createComponent(command);\n});\n\nconst parameters = {\n  // Setup components\n  InputSumType: components.InputSumType,\n  InputABSource: components.InputABSource,\n  InputCGain: components.InputCGain,\n  OutputConfig: components.OutputConfig,\n  Stereolink: components.Stereolink,\n  StereolinkMode: components.StereolinkMode,\n  DelayLink: components.DelayLink,\n  CrossoverLink: components.CrossoverLink,\n  IsDelayCorrectionOn: components.IsDelayCorrectionOn,\n  AirTemperature: components.AirTemperature,\n  DelayUnits: components.DelayUnits,\n  MuteOutsWhenPowered: components.MuteOutsWhenPowered,\n  InputASumGain: components.InputASumGain,\n  InputBSumGain: components.InputBSumGain,\n  InputCSumGain: components.InputCSumGain,\n\n  // Io components\n  Gain: components.Gain,\n  Mute: components.Mute,\n  IsDelayOn: components.IsDelayOn,\n  LongDelay: components.LongDelay,\n  IsEQOn: components.IsEQOn,\n  EQNumber: components.EQNumber,\n  EQIndex: components.EQIndex,\n  DynamicEQAttack: components.DynamicEQAttack,\n  DynamicEQRelease: components.DynamicEQRelease,\n  DynamicEQRatio: components.DynamicEQRatio,\n  DynamicEQThreshold: components.DynamicEQThreshold,\n  IsDynamicEQOn: components.IsDynamicEQOn,\n  DynamicEQFrequency: components.DynamicEQFrequency,\n  DynamicEQQ: components.DynamicEQQ,\n  DynamicEQGain: components.DynamicEQGain,\n  DynamicEQType: components.DynamicEQType,\n  DynamicEQShelving: components.DynamicEQShelving,\n\n  // 9 for each io\n  EQFrequency: components.EQFrequency,\n  EQQ: components.EQQ,\n  EQGain: components.EQGain,\n  EQType: components.EQType,\n  EQShelving: components.EQShelving,\n\n  // Out components\n  ChannelName: components.ChannelName,\n  Source: components.Source,\n  HighpassFilter: components.HighpassFilter,\n  HighpassFrequency: components.HighpassFrequency,\n  LowpassFilter: components.LowpassFilter,\n  LowpassFrequency: components.LowpassFrequency,\n  IsLimiterOn: components.IsLimiterOn,\n  LimiterThreshold: components.LimiterThreshold,\n  LimiterRelease: components.LimiterRelease,\n  Polarity: components.Polarity,\n  Phase: components.Phase,\n  ShortDelay: components.ShortDelay,\n  commandTypes\n};\n\nexport default parameters;\n","import React, {PureComponent} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport pc from './parameters';\n\nclass Crossover extends PureComponent {\n  static propTypes = {\n    channelName: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired,\n    highpassFilter: PropTypes.string.isRequired,\n    highpassFrequency: PropTypes.string.isRequired,\n    lowpassFilter: PropTypes.string.isRequired,\n    lowpassFrequency: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      highpassFilter,\n      highpassFrequency,\n      lowpassFilter,\n      lowpassFrequency,\n      channelName,\n      group,\n      channelId,\n      onChange\n    } = this.props;\n\n    return (\n      <Card>\n        <Card.Header>\n          {channelName\n            ? `${channelId} . ${channelName}`\n            : `Channel ${channelId}`}\n        </Card.Header>\n        <Card.Body>\n          <FormLabel>Highpass Filter</FormLabel>\n          <Row>\n            <Col xs={6}>\n              <pc.HighpassFilter\n                value={highpassFilter}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col xs={6}>\n              <pc.HighpassFrequency\n                value={highpassFrequency}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n          </Row>\n          <FormLabel>Lowpass Filter</FormLabel>\n          <Row>\n            <Col xs={6}>\n              <pc.LowpassFilter\n                value={lowpassFilter}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col xs={6}>\n              <pc.LowpassFrequency\n                value={lowpassFrequency}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Crossover;\n","import React, {Component} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport Crossover from './Crossover';\n\nclass Crossovers extends Component {\n  static propTypes = {\n    group: PropTypes.string.isRequired,\n    channels: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(channels, nextProps.channels);\n  }\n\n  render() {\n    const {channels, onChange, group} = this.props;\n    return (\n      <div>\n        <Row className=\"show-grid\">\n          {Object.keys(channels).map((channelId) => {\n            const {\n              highpassFilter,\n              highpassFrequency,\n              lowpassFilter,\n              lowpassFrequency,\n              channelName\n            } = channels[channelId];\n            return (\n              <Col key={channelId} xs={12} sm={6} md={4}>\n                <Crossover\n                  group={group}\n                  channelId={channelId}\n                  highpassFilter={highpassFilter}\n                  highpassFrequency={highpassFrequency}\n                  lowpassFilter={lowpassFilter}\n                  lowpassFrequency={lowpassFrequency}\n                  channelName={channelName}\n                  onChange={onChange}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Crossovers;\n","import React, {PureComponent} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport pc from './parameters';\n\nclass Delay extends PureComponent {\n  static defaultProps = {\n    channelName: null,\n    shortDelay: null\n  };\n\n  static propTypes = {\n    channelId: PropTypes.string.isRequired,\n    channelName: PropTypes.string,\n    group: PropTypes.string.isRequired,\n    isDelayOn: PropTypes.bool.isRequired,\n    longDelay: PropTypes.number.isRequired,\n    shortDelay: PropTypes.number,\n    airTemperature: PropTypes.number.isRequired,\n    isDelayCorrectionOn: PropTypes.bool.isRequired,\n    delayUnits: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      isDelayOn,\n      shortDelay,\n      longDelay,\n      channelName,\n      channelId,\n      airTemperature,\n      isDelayCorrectionOn,\n      delayUnits,\n      onChange,\n      group\n    } = this.props;\n    const temperature = isDelayCorrectionOn ? airTemperature : 20;\n    // https://en.wikipedia.org/wiki/Speed_of_sound#Practical_formula_for_dry_air\n    const temperatureFactor = 1 / (331.3 + 0.606 * temperature);\n    const round = (value) => Math.round(value * 100) / 100;\n    const localizeLength =\n      delayUnits === 'mm'\n        ? (value) => value\n        : (value) => (value * 0.393701) / 10;\n\n    const localizeUnit = (delayUnits, unit) => {\n      if (delayUnits === 'mm') {\n        if (unit === 'mm') {\n          return 'mm';\n        }\n\n        return 'm';\n      }\n\n      if (unit === 'mm') {\n        return 'in';\n      }\n\n      return 'ft';\n    };\n\n    const localizeDividor = (delayUnits, unit) => {\n      if (delayUnits === 'mm') {\n        if (unit === 'mm') {\n          return 1;\n        }\n\n        if (unit === 'cm') {\n          return 100;\n        }\n      } else if (delayUnits === 'inch') {\n        if (unit === 'mm') {\n          return 1;\n        }\n\n        if (unit === 'cm') {\n          return 1.2;\n        }\n      }\n    };\n\n    const formatter = (value, unit) =>\n      `${round(\n        localizeLength(value) / localizeDividor(delayUnits, unit)\n      )} ${localizeUnit(delayUnits, unit)} / ${round(\n        temperatureFactor * value * (unit === 'cm' ? 10 : 1)\n      )} ms`;\n\n    const labelFormatter = (value, unit) =>\n      round(\n        localizeLength(value) / localizeDividor(delayUnits, unit)\n      ).toString();\n\n    return (\n      <Card>\n        <Card.Header>\n          {channelName\n            ? `${channelId} . ${channelName}`\n            : `Channel ${channelId}`}\n        </Card.Header>\n        <Card.Body>\n          <pc.IsDelayOn\n            isTrue={isDelayOn}\n            group={group}\n            channelId={channelId}\n            labelFormatter={labelFormatter}\n            onChange={onChange}\n          />\n          {group === 'outputs' && (\n            <pc.ShortDelay\n              hasLabel\n              value={shortDelay}\n              group={group}\n              channelId={channelId}\n              formatter={formatter}\n              labelFormatter={labelFormatter}\n              onChange={onChange}\n            />\n          )}\n          <pc.LongDelay\n            hasLabel\n            value={longDelay}\n            group={group}\n            channelId={channelId}\n            formatter={formatter}\n            labelFormatter={labelFormatter}\n            onChange={onChange}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Delay;\n","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport Delay from './Delay';\nimport pc from './parameters';\n\nclass Delays extends Component {\n  static propTypes = {\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    channels: PropTypes.objectOf(\n      PropTypes.shape({\n        isDelayOn: PropTypes.bool.isRequired,\n        longDelay: PropTypes.number.isRequired,\n        shortDelay: PropTypes.number,\n        channelName: PropTypes.string\n      })\n    ).isRequired,\n    setup: PropTypes.shape({\n      airTemperature: PropTypes.number.isRequired,\n      isDelayCorrectionOn: PropTypes.bool.isRequired,\n      delayUnits: PropTypes.string.isRequired,\n      delayLink: PropTypes.bool.isRequired\n    }).isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels, setup} = this.props;\n\n    return !(\n      isEqual(channels, nextProps.channels) &&\n      setup.airTemperature === nextProps.setup.airTemperature &&\n      setup.delayLink === nextProps.setup.delayLink &&\n      setup.isDelayCorrectionOn === nextProps.setup.isDelayCorrectionOn &&\n      setup.delayUnits === nextProps.setup.delayUnits\n    );\n  }\n\n  render() {\n    const {channels, setup, group, onChange} = this.props;\n    const {airTemperature, isDelayCorrectionOn, delayLink, delayUnits} = setup;\n\n    return (\n      <div>\n        {group === 'outputs' && (\n          <Card>\n            <Card.Header>Long Delay Link</Card.Header>\n            <Card.Body>\n              <pc.DelayLink isTrue={delayLink} onChange={onChange} />\n            </Card.Body>\n          </Card>\n        )}\n\n        {Object.keys(channels).map((channelId) => {\n          const channel = channels[channelId];\n          return (\n            <Delay\n              key={channelId}\n              channel\n              group={group}\n              channelId={channelId}\n              isDelayOn={channel.isDelayOn}\n              delayUnits={delayUnits}\n              shortDelay={channel.shortDelay}\n              longDelay={channel.longDelay}\n              airTemperature={airTemperature}\n              isDelayCorrectionOn={isDelayCorrectionOn}\n              channelName={channel.channelName}\n              onChange={onChange}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Delays;\n","import React, {PureComponent} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport pc from './parameters';\n\nclass DynamicEQ extends PureComponent {\n  static defaultProps = {\n    channelName: null\n  };\n\n  static propTypes = {\n    isDynamicEQOn: PropTypes.bool.isRequired,\n    dynamicEQType: PropTypes.string.isRequired,\n    dynamicEQFrequency: PropTypes.string.isRequired,\n    dynamicEQGain: PropTypes.number.isRequired,\n    dynamicEQQ: PropTypes.string.isRequired,\n    dynamicEQShelving: PropTypes.string.isRequired,\n    dynamicEQAttack: PropTypes.string.isRequired,\n    dynamicEQRelease: PropTypes.string.isRequired,\n    dynamicEQRatio: PropTypes.string.isRequired,\n    dynamicEQThreshold: PropTypes.number.isRequired,\n    group: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    channelName: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      channelName,\n      isDynamicEQOn,\n      dynamicEQType,\n      dynamicEQFrequency,\n      dynamicEQGain,\n      dynamicEQQ,\n      dynamicEQShelving,\n      dynamicEQAttack,\n      dynamicEQRelease,\n      dynamicEQRatio,\n      dynamicEQThreshold,\n      group,\n      channelId,\n      onChange\n    } = this.props;\n\n    return (\n      <Card>\n        <Card.Header>\n          {channelName\n            ? `${channelId} . ${channelName}`\n            : `Channel ${channelId}`}\n        </Card.Header>\n        <Card.Body>\n          <pc.IsDynamicEQOn\n            isTrue={isDynamicEQOn}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n          <Row>\n            <Col md={12} lg={6}>\n              <pc.DynamicEQType\n                hasLabel\n                value={dynamicEQType}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col md={12} lg={6}>\n              <pc.DynamicEQFrequency\n                hasLabel\n                value={dynamicEQFrequency}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12} lg={6}>\n              {dynamicEQType === 'Bandpass' && (\n                <pc.DynamicEQQ\n                  hasLabel\n                  value={dynamicEQQ}\n                  group={group}\n                  channelId={channelId}\n                  onChange={onChange}\n                />\n              )}\n              {dynamicEQType !== 'Bandpass' && (\n                <pc.DynamicEQShelving\n                  hasLabel\n                  value={dynamicEQShelving}\n                  group={group}\n                  channelId={channelId}\n                  onChange={onChange}\n                />\n              )}\n            </Col>\n            <Col md={12} lg={6}>\n              <pc.DynamicEQAttack\n                hasLabel\n                value={dynamicEQAttack}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12} lg={6}>\n              <pc.DynamicEQRelease\n                hasLabel\n                value={dynamicEQRelease}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col md={12} lg={6}>\n              <pc.DynamicEQRatio\n                hasLabel\n                value={dynamicEQRatio}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n          </Row>\n          <pc.DynamicEQGain\n            hasLabel\n            value={dynamicEQGain}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n          <pc.DynamicEQThreshold\n            hasLabel\n            value={dynamicEQThreshold}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default DynamicEQ;\n","import React, {Component} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport DynamicEQ from './DynamicEQ';\n\nclass DynamicEQs extends Component {\n  static propTypes = {\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    channels: PropTypes.objectOf(\n      PropTypes.shape({\n        isDynamicEQOn: PropTypes.bool.isRequired,\n        dynamicEQType: PropTypes.string.isRequired,\n        dynamicEQFrequency: PropTypes.string.isRequired,\n        dynamicEQGain: PropTypes.number.isRequired,\n        dynamicEQQ: PropTypes.string.isRequired,\n        dynamicEQShelving: PropTypes.string.isRequired,\n        dynamicEQAttack: PropTypes.string.isRequired,\n        dynamicEQRelease: PropTypes.string.isRequired,\n        dynamicEQRatio: PropTypes.string.isRequired,\n        dynamicEQThreshold: PropTypes.number.isRequired,\n        channelName: PropTypes.string\n      })\n    ).isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(channels, nextProps.channels);\n  }\n\n  render() {\n    const {channels, group, onChange} = this.props;\n    return (\n      <Row className=\"show-grid\">\n        {Object.keys(channels).map((channelId) => {\n          const channel = channels[channelId];\n          return (\n            <Col key={channelId} xs={12} md={6}>\n              <DynamicEQ\n                key={channelId}\n                group={group}\n                channelId={channelId}\n                channelName={channel.channelName}\n                isDynamicEQOn={channel.isDynamicEQOn}\n                dynamicEQType={channel.dynamicEQType}\n                dynamicEQFrequency={channel.dynamicEQFrequency}\n                dynamicEQGain={channel.dynamicEQGain}\n                dynamicEQQ={channel.dynamicEQQ}\n                dynamicEQShelving={channel.dynamicEQShelving}\n                dynamicEQAttack={channel.dynamicEQAttack}\n                dynamicEQRelease={channel.dynamicEQRelease}\n                dynamicEQRatio={channel.dynamicEQRatio}\n                dynamicEQThreshold={channel.dynamicEQThreshold}\n                onChange={onChange}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n    );\n  }\n}\n\nexport default DynamicEQs;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport windowSize from 'react-window-size';\nimport {withBreakpoints} from 'react-breakpoints';\nimport {LineChart, Line, XAxis, YAxis, Tooltip} from 'recharts';\nimport PlotTooltip from './PlotTooltip';\nimport TransferFunction from './TransferFunction';\n\nconst frequencyPoints = TransferFunction.generateFrequencyPoints(\n  10,\n  20000,\n  250\n);\n\nclass EQPlot extends Component {\n  static defaultProps = {\n    isGainApplied: false\n  };\n\n  static propTypes = {\n    channels: PropTypes.object.isRequired,\n    isGainApplied: PropTypes.bool,\n    windowWidth: PropTypes.number.isRequired,\n    currentBreakpoint: PropTypes.string.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      channels,\n      isGainApplied,\n      windowWidth,\n      currentBreakpoint\n    } = this.props;\n\n    if (!isEqual(channels, nextProps.channels)) {\n      return true;\n    }\n\n    if (isGainApplied !== nextProps.isGainApplied) {\n      return true;\n    }\n\n    if (\n      nextProps.currentBreakpoint === 'xs' &&\n      windowWidth !== nextProps.windowWidth\n    ) {\n      return true;\n    }\n\n    if (currentBreakpoint !== nextProps.currentBreakpoint) {\n      return true;\n    }\n\n    return false;\n  }\n\n  plotData(channels, isGainApplied) {\n    const values = Object.keys(channels).map((key) => {\n      const tf = new TransferFunction(frequencyPoints);\n\n      const {eqs} = channels[key];\n      Object.keys(eqs).forEach((eqsKey) => {\n        const eq = eqs[eqsKey];\n        if (channels[key].isEQOn === true && eq.eQGain !== 0) {\n          if (eq.eQType === 'Bandpass') {\n            tf.parametricEQ(eq.eQFrequency, eq.eQGain, eq.eQQ);\n          } else {\n            if (eq.eQShelving === '6dB') {\n              tf.firstOrderShelving(\n                eq.eQFrequency,\n                eq.eQGain,\n                eq.eQType === 'High Shelv'\n              );\n            }\n\n            if (eq.eQShelving === '12dB') {\n              tf.secondOrderShelving(\n                eq.eQFrequency,\n                eq.eQGain,\n                eq.eQType === 'High Shelv'\n              );\n            }\n          }\n        }\n      });\n\n      return {\n        gain: channels[key].gain,\n        data: tf.getMagnitude(),\n        channel: channels[key].channelName\n          ? `${key}. ${channels[key].channelName}`\n          : `Input ${key}`\n      };\n    });\n\n    return frequencyPoints.map((hz, index) => {\n      const result = {hz};\n      values.forEach((value) => {\n        const rounded = Math.round(value.data[index] * 100) / 100;\n        result[value.channel] = isGainApplied ? rounded + value.gain : rounded;\n      });\n      return result;\n    });\n  }\n\n  render() {\n    const {\n      channels,\n      isGainApplied,\n      windowWidth,\n      currentBreakpoint\n    } = this.props;\n    const colors = [\n      '#3498DB',\n      '#307473',\n      '#7A82AB',\n      '#F0F3BD',\n      '#375a7f',\n      '#F39C12',\n      '#E74C3C',\n      '#95A5A6',\n      '#18BC9C'\n    ];\n\n    let width;\n\n    switch (currentBreakpoint) {\n      case 'sm':\n        width = 480;\n        break;\n      case 'md':\n        width = 660;\n        break;\n      case 'lg':\n        width = 900;\n        break;\n      case 'xl':\n        width = 1080;\n        break;\n      default:\n        width = windowWidth - 60;\n    }\n\n    const height = width * 0.33;\n\n    return (\n      <LineChart\n        data={this.plotData(channels, isGainApplied)}\n        width={width}\n        height={height}\n        margin={{top: 20, right: 30, bottom: 5, left: -30}}\n      >\n        <XAxis dataKey=\"hz\" tickFormatter={(tick) => Math.round(tick)} />\n        <YAxis\n          allowDataOverflow\n          type=\"number\"\n          domain={[isGainApplied ? 'auto' : -20, isGainApplied ? 'auto' : 20]}\n        />\n        <Tooltip content={<PlotTooltip />} />\n        {Object.keys(channels).map((channelId, index) => (\n          <Line\n            key={channelId}\n            type=\"monotone\"\n            tickFormatterkey={channelId}\n            dataKey={\n              channels[channelId].channelName\n                ? `${channelId}. ${channels[channelId].channelName}`\n                : `Input ${channelId}`\n            }\n            dot={false}\n            strokeWidth={3}\n            stroke={colors[index]}\n            unit=\"dB\"\n          />\n        ))}\n      </LineChart>\n    );\n  }\n}\n\nexport default windowSize(withBreakpoints(EQPlot));\n","import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport EQPlot from './plots/EQPlot';\n\nclass CrossoverPlotPanel extends Component {\n  static propTypes = {\n    channels: PropTypes.object.isRequired,\n    group: PropTypes.string.isRequired\n  };\n\n  state = {\n    isGainApplied: false\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {channels} = this.props;\n    const {isGainApplied} = this.state;\n    return !(\n      isGainApplied === nextState.isGainApplied &&\n      isEqual(channels, nextProps.channels)\n    );\n  }\n\n  handleToggleGain = () => {\n    this.setState((previousState) => ({\n      isGainApplied: !previousState.isGainApplied\n    }));\n  };\n\n  render() {\n    const {channels, group} = this.props;\n    return (\n      <Card>\n        <Card.Header>\n          EQ Frequency Response: All{' '}\n          {group.charAt(0).toUpperCase() + group.slice(1)}\n          <Button\n            size=\"sm\"\n            className=\"header-button\"\n            variant={this.state.isGainApplied ? 'success' : 'dark'}\n            onClick={this.handleToggleGain}\n          >\n            Apply Gain\n          </Button>\n        </Card.Header>\n        <Card.Body>\n          <EQPlot\n            channels={channels}\n            isGainApplied={this.state.isGainApplied}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CrossoverPlotPanel;\n","import React, {PureComponent} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport pc from './parameters';\n\nclass EQ extends PureComponent {\n  static propTypes = {\n    channelId: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired,\n    eQType: PropTypes.string.isRequired,\n    eQFrequency: PropTypes.string.isRequired,\n    eQQ: PropTypes.string.isRequired,\n    eQShelving: PropTypes.string.isRequired,\n    eQGain: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      eQType,\n      eQFrequency,\n      eQQ,\n      eQShelving,\n      eQGain,\n      id,\n      onChange,\n      group,\n      channelId\n    } = this.props;\n\n    return (\n      <Card>\n        <Card.Header>{`Equalizer ${id}`}</Card.Header>\n        <Card.Body>\n          <Row>\n            <Col xs={12} sm={4}>\n              <pc.EQType\n                hasLabel\n                value={eQType}\n                eq={id}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col xs={12} sm={4}>\n              <pc.EQFrequency\n                hasLabel\n                value={eQFrequency}\n                eq={id}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col xs={12} sm={4}>\n              {eQType === 'Bandpass' && (\n                <pc.EQQ\n                  hasLabel\n                  value={eQQ}\n                  eq={id}\n                  group={group}\n                  channelId={channelId}\n                  onChange={onChange}\n                />\n              )}\n              {eQType !== 'Bandpass' && (\n                <pc.EQShelving\n                  hasLabel\n                  value={eQShelving}\n                  eq={id}\n                  group={group}\n                  channelId={channelId}\n                  onChange={onChange}\n                />\n              )}\n            </Col>\n          </Row>\n          <pc.EQGain\n            hasLabel\n            value={eQGain}\n            eq={id}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default EQ;\n","import React, {Component} from 'react';\nimport BlockUi from 'react-block-ui';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport EQ from './EQ';\nimport EQPlot from './plots/EQPlot';\nimport pc from './parameters';\n\nclass EQs extends Component {\n  static defaultProps = {\n    channel: {\n      channelName: null\n    }\n  };\n\n  static propTypes = {\n    channelId: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired,\n    channel: PropTypes.shape({\n      eqs: PropTypes.object.isRequired,\n      isEQOn: PropTypes.bool.isRequired,\n      channelName: PropTypes.string\n    }),\n    isBlocking: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channel, isBlocking} = this.props;\n    return (\n      !isEqual(channel, nextProps.channel) ||\n      isBlocking !== nextProps.isBlocking\n    );\n  }\n\n  render() {\n    const {channel, group, channelId, onChange, isBlocking} = this.props;\n    const {eqs, isEQOn} = channel;\n    const eqsKeys = Object.keys(eqs).sort();\n    const activeEQs = [];\n    let activeFound = false;\n\n    for (let i = eqsKeys.length - 1; i >= 0; i--) {\n      const gain = eqs[eqsKeys[i]].eQGain;\n      if (!activeFound && gain && gain !== 0) {\n        if (eqs[eqsKeys[i + 1]]) {\n          activeEQs.push({id: eqsKeys[i + 1], ...eqs[eqsKeys[i + 1]]});\n        }\n\n        activeFound = true;\n      }\n\n      if (activeFound) {\n        activeEQs.unshift({id: eqsKeys[i], ...eqs[eqsKeys[i]]});\n      }\n    }\n\n    if (!activeFound) {\n      activeEQs.push({id: eqsKeys[0], ...eqs[eqsKeys[0]]});\n    }\n\n    return (\n      <div>\n        <Card>\n          <Card.Header>\n            {`Frequency Response: ${\n              channel.channelName\n                ? `${channel.channelName}`\n                : `Input ${channelId}`\n            }`}\n          </Card.Header>\n          <Card.Body>\n            <EQPlot channels={{[channelId]: channel}} />\n          </Card.Body>\n        </Card>\n        <BlockUi blocking={isBlocking}>\n          <Card>\n            <Card.Header>\n              {channel.channelName\n                ? `${channelId}. ${channel.channelName} Equalizer`\n                : `Input ${channelId} Equalizer`}\n            </Card.Header>\n            <Card.Body>\n              <pc.IsEQOn\n                isTrue={isEQOn}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Card.Body>\n          </Card>\n          {activeEQs.map((eq) => {\n            const {eQType, eQFrequency, eQQ, eQShelving, eQGain} = eq;\n            return (\n              <EQ\n                key={group + channelId + eq.id}\n                group={group}\n                eq={eq}\n                id={eq.id}\n                channelId={channelId}\n                eQType={eQType}\n                eQFrequency={eQFrequency}\n                eQQ={eQQ}\n                eQShelving={eQShelving}\n                eQGain={eQGain}\n                onChange={onChange}\n              />\n            );\n          })}\n        </BlockUi>\n      </div>\n    );\n  }\n}\n\nexport default EQs;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport isEqual from 'lodash.isequal';\nimport EQList from './EQList';\n\nclass EQs extends Component {\n  static propTypes = {\n    isBlocking: PropTypes.bool.isRequired,\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    channels: PropTypes.objectOf(\n      PropTypes.shape({\n        channelName: PropTypes.string\n      })\n    ).isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels, isBlocking} = this.props;\n    return (\n      !isEqual(channels, nextProps.channels) ||\n      isBlocking !== nextProps.isBlocking\n    );\n  }\n\n  render() {\n    const {channels, group, onChange, isBlocking} = this.props;\n\n    return (\n      <Tabs defaultActiveKey={Object.keys(channels)[0]} id=\"equalizers\">\n        {Object.keys(channels).map((channelId) => {\n          return (\n            <Tab\n              key={channelId}\n              title={\n                channels[channelId].channelName\n                  ? `${channelId}. ${channels[channelId].channelName}`\n                  : `Input ${channelId}`\n              }\n              eventKey={channelId}\n            >\n              <EQList\n                channel={channels[channelId]}\n                group={group}\n                channelId={channelId}\n                isBlocking={isBlocking}\n                onChange={onChange}\n              />\n            </Tab>\n          );\n        })}\n      </Tabs>\n    );\n  }\n}\n\nexport default EQs;\n","import React, {PureComponent} from 'react';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport PropTypes from 'prop-types';\nimport pc from './parameters';\n\nclass Gain extends PureComponent {\n  static defaultProps = {\n    channelName: null\n  };\n\n  static propTypes = {\n    channelName: PropTypes.string,\n    gain: PropTypes.number.isRequired,\n    group: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {channelName, gain, group, channelId, onChange} = this.props;\n\n    return (\n      <div>\n        <FormLabel className=\"form-header\">\n          {channelName\n            ? `${channelId} . ${channelName}`\n            : `Channel ${channelId}`}\n        </FormLabel>\n        <pc.Gain\n          value={gain}\n          group={group}\n          channelId={channelId}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Gain;\n","import React, {Component} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport Gain from './Gain';\n\nclass Gains extends Component {\n  static propTypes = {\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    channels: PropTypes.objectOf(\n      PropTypes.shape({\n        channelName: PropTypes.string,\n        gain: PropTypes.number.isRequired\n      })\n    ).isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(channels, nextProps.channels);\n  }\n\n  render() {\n    const {channels, group, onChange} = this.props;\n\n    return (\n      <Row className=\"show-grid\">\n        {Object.keys(channels).map((channelId) => {\n          const {channelName, gain} = channels[channelId];\n          return (\n            <Col key={channelId} xs={12}>\n              <Gain\n                key={channelId}\n                group={group}\n                channelId={channelId}\n                channelName={channelName}\n                gain={gain}\n                onChange={onChange}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n    );\n  }\n}\n\nexport default Gains;\n","import React, {PureComponent} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport pc from './parameters';\n\nclass Limiter extends PureComponent {\n  static propTypes = {\n    channelId: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired,\n    channelName: PropTypes.string.isRequired,\n    isLimiterOn: PropTypes.bool.isRequired,\n    limiterThreshold: PropTypes.number.isRequired,\n    limiterRelease: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      channelName,\n      isLimiterOn,\n      limiterThreshold,\n      limiterRelease,\n      channelId,\n      onChange,\n      group\n    } = this.props;\n\n    return (\n      <Card>\n        <Card.Header>\n          {channelName\n            ? `${channelId} . ${channelName}`\n            : `Channel ${channelId}`}\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col xs={6} md={12} lg={6}>\n              <pc.IsLimiterOn\n                isTrue={isLimiterOn}\n                label=\"Limiter\"\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n            <Col xs={6} md={12} lg={6}>\n              <pc.LimiterRelease\n                hasLabel\n                value={limiterRelease}\n                group={group}\n                channelId={channelId}\n                onChange={onChange}\n              />\n            </Col>\n          </Row>\n          <pc.LimiterThreshold\n            hasLabel\n            value={limiterThreshold}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Limiter;\n","import React, {Component} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport Limiter from './Limiter';\n\nclass Limiters extends Component {\n  static propTypes = {\n    channels: PropTypes.object.isRequired,\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(channels, nextProps.channels);\n  }\n\n  render() {\n    const {channels, onChange, group} = this.props;\n\n    return (\n      <Row className=\"show-grid\">\n        {Object.keys(channels).map((channelId) => {\n          const {\n            channelName,\n            isLimiterOn,\n            limiterThreshold,\n            limiterRelease\n          } = channels[channelId];\n          return (\n            <Col key={channelId} xs={12} sm={12} md={6}>\n              <Limiter\n                key={channelId}\n                channel={channels[channelId]}\n                channelId={channelId}\n                group={group}\n                channelName={channelName}\n                isLimiterOn={isLimiterOn}\n                limiterThreshold={limiterThreshold}\n                limiterRelease={limiterRelease}\n                onChange={onChange}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n    );\n  }\n}\n\nexport default Limiters;\n","import React, {PureComponent} from 'react';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport PropTypes from 'prop-types';\nimport pc from './parameters';\n\nclass OutputSource extends PureComponent {\n  static propTypes = {\n    channelName: PropTypes.string.isRequired,\n    source: PropTypes.string.isRequired,\n    group: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {channelName, source, channelId, onChange, group} = this.props;\n    return (\n      <div>\n        <FormLabel>\n          {channelName ? channelId + '. ' + channelName : channelId}\n        </FormLabel>\n        <pc.Source\n          value={source}\n          group={group}\n          channelId={channelId}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default OutputSource;\n","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport OutputSource from './OutputSource';\n\nclass OutputSources extends Component {\n  static propTypes = {\n    channels: PropTypes.object.isRequired,\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(channels, nextProps.channels);\n  }\n\n  render() {\n    const {channels, group, onChange} = this.props;\n\n    return (\n      <Card>\n        <Card.Header>Output Source</Card.Header>\n        <Card.Body>\n          <Row>\n            {Object.keys(channels).map((channelId) => {\n              const {channelName, source} = channels[channelId];\n              return (\n                <Col key={channelId} sm={4} xs={12}>\n                  <OutputSource\n                    key={channelId}\n                    group={group}\n                    channelId={channelId}\n                    channelName={channelName}\n                    source={source}\n                    onChange={onChange}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default OutputSources;\n","import React, {PureComponent} from 'react';\nimport FormLabel from 'react-bootstrap/FormLabel';\nimport PropTypes from 'prop-types';\nimport pc from './parameters';\n\nclass ChannelName extends PureComponent {\n  static propTypes = {\n    group: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    channelName: PropTypes.string.isRequired\n  };\n\n  render() {\n    const {channelName, channelId, onChange, group} = this.props;\n\n    return (\n      <div>\n        <FormLabel>\n          {channelName ? channelId + '. ' + channelName : channelId}\n        </FormLabel>\n        <pc.ChannelName\n          value={channelName}\n          group={group}\n          channelId={channelId}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ChannelName;\n","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport ChannelName from './ChannelName';\n\nclass ChannelNames extends Component {\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(nextProps.channels, channels);\n  }\n\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    group: PropTypes.string.isRequired,\n    channels: PropTypes.objectOf(\n      PropTypes.shape({\n        channelName: PropTypes.string\n      })\n    ).isRequired\n  };\n\n  render() {\n    const {channels, group, onChange} = this.props;\n\n    return (\n      <Card>\n        <Card.Header>Output Names</Card.Header>\n        <Card.Body>\n          <Row>\n            {Object.keys(channels).map((channelId) => {\n              return (\n                <Col key={channelId} xs={12} sm={6} md={4}>\n                  <ChannelName\n                    key={channelId}\n                    group={group}\n                    channelId={channelId}\n                    channelName={channels[channelId].channelName}\n                    onChange={onChange}\n                  />\n                </Col>\n              );\n            })}\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ChannelNames;\n","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport OutputSources from './OutputSources';\nimport ChannelNames from './ChannelNames';\nimport pc from './parameters';\n\nclass OutputRouting extends Component {\n  static propTypes = {\n    setup: PropTypes.shape({\n      stereolink: PropTypes.bool.isRequired,\n      muteOutsWhenPowered: PropTypes.bool.isRequired,\n      outputConfig: PropTypes.string.isRequired,\n      crossoverLink: PropTypes.bool.isRequired\n    }).isRequired,\n    outputs: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {outputs, setup} = this.props;\n    return !(\n      isEqual(outputs, nextProps.outputs) && isEqual(setup, nextProps.setup)\n    );\n  }\n\n  render() {\n    const {setup, onChange, outputs} = this.props;\n    const {\n      stereolink,\n      muteOutsWhenPowered,\n      outputConfig,\n      crossoverLink\n    } = setup;\n\n    return (\n      <div>\n        <Card>\n          <Card.Header>Link Setup</Card.Header>\n          <Card.Body>\n            <Row>\n              <Col xs={12} sm={4}>\n                <pc.OutputConfig\n                  hasLabel\n                  value={outputConfig}\n                  onChange={onChange}\n                />\n              </Col>\n              <Col xs={12} sm={4}>\n                <pc.Stereolink\n                  hasLabel\n                  isTrue={stereolink}\n                  onChange={onChange}\n                />\n              </Col>\n              <Col xs={12} sm={4}>\n                <pc.CrossoverLink\n                  hasLabel\n                  isTrue={crossoverLink}\n                  onChange={onChange}\n                />\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n\n        <OutputSources group=\"outputs\" channels={outputs} onChange={onChange} />\n        <ChannelNames group=\"outputs\" channels={outputs} onChange={onChange} />\n        <Card>\n          <Card.Header>Mute Outs When Powered</Card.Header>\n          <Card.Body>\n            <pc.MuteOutsWhenPowered\n              isTrue={muteOutsWhenPowered}\n              onChange={onChange}\n            />\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default OutputRouting;\n","import React, {PureComponent} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport pc from './parameters';\n\nclass Phase extends PureComponent {\n  static propTypes = {\n    channelId: PropTypes.string.isRequired,\n    channelName: PropTypes.string.isRequired,\n    polarity: PropTypes.string.isRequired,\n    phase: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired,\n    group: PropTypes.string.isRequired\n  };\n\n  render() {\n    const {\n      channelName,\n      polarity,\n      phase,\n      channelId,\n      onChange,\n      group\n    } = this.props;\n\n    return (\n      <Card>\n        <Card.Header>\n          {channelName\n            ? `${channelId} . ${channelName}`\n            : `Channel ${channelId}`}\n        </Card.Header>\n        <Card.Body>\n          <pc.Polarity\n            hasLabel\n            value={polarity}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n          <pc.Phase\n            hasLabel\n            value={phase}\n            group={group}\n            channelId={channelId}\n            onChange={onChange}\n          />\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Phase;\n","import React, {Component} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport Phase from './Phase';\n\nclass Phases extends Component {\n  static propTypes = {\n    channels: PropTypes.object.isRequired,\n    group: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {channels} = this.props;\n    return !isEqual(channels, nextProps.channels);\n  }\n\n  render() {\n    const {channels, group, onChange} = this.props;\n\n    return (\n      <Row className=\"show-grid\">\n        {Object.keys(channels).map((channelId) => {\n          const {channelName, polarity, phase} = channels[channelId];\n          return (\n            <Col key={channelId} xs={12} md={6}>\n              <Phase\n                key={channelId}\n                group={group}\n                channelId={channelId}\n                channelName={channelName}\n                polarity={polarity}\n                phase={phase}\n                onChange={onChange}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n    );\n  }\n}\n\nexport default Phases;\n","import React, {Component} from 'react';\nimport BlockUi from 'react-block-ui';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport isEqual from 'lodash.isequal';\nimport CrossoverPlotPanel from './CrossoverPlotPanel';\nimport Crossovers from './Crossovers';\nimport Delays from './Delays';\nimport DynamicEQs from './DynamicEQs';\nimport EQPlotPanel from './EQPlotPanel';\nimport EQs from './EQs';\nimport Gains from './Gains';\nimport Limiters from './Limiters';\nimport OutputRouting from './OutputRouting';\nimport Phases from './Phases';\n\nclass Outputs extends Component {\n  static propTypes = {\n    isBlocking: PropTypes.bool.isRequired,\n    channels: PropTypes.object.isRequired,\n    setup: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {isBlocking, channels, setup} = this.props;\n    return !(\n      isBlocking === nextProps.isBlocking &&\n      isEqual(channels, nextProps.channels) &&\n      isEqual(setup, nextProps.setup)\n    );\n  }\n\n  render() {\n    const {channels, setup, onChange, isBlocking} = this.props;\n    return (\n      <div>\n        <Tabs\n          unmountOnExit\n          defaultActiveKey=\"gain\"\n          variant=\"pills\"\n          id=\"outputs\"\n          className=\"control-menu\"\n        >\n          <Tab title=\"Gain\" variant=\"primary\" eventKey=\"gain\">\n            <Card>\n              <Card.Header>Gain</Card.Header>\n              <Card.Body>\n                <BlockUi blocking={isBlocking}>\n                  <Gains\n                    group=\"outputs\"\n                    channels={channels}\n                    onChange={onChange}\n                  />\n                </BlockUi>\n              </Card.Body>\n            </Card>\n          </Tab>\n          <Tab title=\"Crossover\" variant=\"primary\" eventKey=\"crossover\">\n            <CrossoverPlotPanel channels={channels} />\n            <BlockUi blocking={isBlocking}>\n              <Crossovers\n                group=\"outputs\"\n                channels={channels}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n          <Tab title=\"EQ\" variant=\"primary\" eventKey=\"eqs\">\n            <EQPlotPanel channels={channels} group=\"outputs\" />\n            <EQs\n              isBlocking={isBlocking}\n              group=\"outputs\"\n              channels={channels}\n              onChange={onChange}\n            />\n          </Tab>\n          <Tab title=\"Dynamic EQ\" variant=\"primary\" eventKey=\"dynamicEQs\">\n            <BlockUi blocking={isBlocking}>\n              <DynamicEQs\n                group=\"outputs\"\n                channels={channels}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n          <Tab title=\"Limiter\" variant=\"primary\" eventKey=\"limiters\">\n            <BlockUi blocking={isBlocking}>\n              <Limiters\n                group=\"outputs\"\n                channels={channels}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n          <Tab title=\"Phase\" variant=\"primary\" eventKey=\"phases\">\n            <BlockUi blocking={isBlocking}>\n              <Phases group=\"outputs\" channels={channels} onChange={onChange} />\n            </BlockUi>\n          </Tab>\n          <Tab title=\"Delay\" variant=\"primary\" eventKey=\"delays\">\n            <BlockUi blocking={isBlocking}>\n              <Delays\n                group=\"outputs\"\n                channels={channels}\n                setup={setup}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n          <Tab title=\"Routing\" variant=\"primary\" eventKey=\"routing\">\n            <BlockUi blocking={isBlocking}>\n              <OutputRouting\n                setup={setup}\n                outputs={channels}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default Outputs;\n","import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport isEqual from 'lodash.isequal';\nimport pc from './parameters';\n\nclass InputRouting extends Component {\n  static propTypes = {\n    setup: PropTypes.shape({\n      inputABSource: PropTypes.string.isRequired,\n      stereolinkMode: PropTypes.string.isRequired,\n      inputSumType: PropTypes.string.isRequired,\n      inputCGain: PropTypes.string.isRequired,\n      inputASumGain: PropTypes.number.isRequired,\n      inputBSumGain: PropTypes.number.isRequired,\n      inputCSumGain: PropTypes.number.isRequired\n    }).isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {setup} = this.props;\n    return !isEqual(setup, nextProps.setup);\n  }\n\n  render() {\n    const {setup, onChange} = this.props;\n    const {\n      inputABSource,\n      inputCGain,\n      stereolinkMode,\n      inputSumType,\n      inputASumGain,\n      inputBSumGain,\n      inputCSumGain\n    } = setup;\n\n    return (\n      <div>\n        <Card>\n          <Card.Header>Source Setup</Card.Header>\n          <Card.Body>\n            <Row>\n              <Col xs={12} sm={4}>\n                <pc.InputABSource\n                  hasLabel\n                  value={inputABSource}\n                  onChange={onChange}\n                />\n              </Col>\n              <Col xs={12} sm={4}>\n                <pc.InputCGain\n                  hasLabel\n                  value={inputCGain}\n                  onChange={onChange}\n                />\n              </Col>\n              <Col xs={12} sm={4}>\n                <pc.StereolinkMode\n                  hasLabel\n                  value={stereolinkMode}\n                  onChange={onChange}\n                />\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n        <Card>\n          <Card.Header>Sum Setup</Card.Header>\n          <Card.Body>\n            <pc.InputSumType\n              hasLabel\n              value={inputSumType}\n              onChange={onChange}\n            />\n            <pc.InputASumGain\n              hasLabel\n              value={inputASumGain}\n              onChange={onChange}\n            />\n            <pc.InputBSumGain\n              hasLabel\n              value={inputBSumGain}\n              onChange={onChange}\n            />\n            <pc.InputCSumGain\n              hasLabel\n              value={inputCSumGain}\n              onChange={onChange}\n            />\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default InputRouting;\n","import React, {Component} from 'react';\nimport BlockUi from 'react-block-ui';\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport isEqual from 'lodash.isequal';\nimport Delays from './Delays';\nimport DynamicEQs from './DynamicEQs';\nimport EQPlotPanel from './EQPlotPanel';\nimport EQs from './EQs';\nimport Gains from './Gains';\nimport InputRouting from './InputRouting';\n\nclass Inputs extends Component {\n  static propTypes = {\n    isBlocking: PropTypes.bool.isRequired,\n    channels: PropTypes.object.isRequired,\n    setup: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const {isBlocking, channels, setup} = this.props;\n\n    return !(\n      isBlocking === nextProps.isBlocking &&\n      isEqual(channels, nextProps.channels) &&\n      isEqual(setup, nextProps.setup)\n    );\n  }\n\n  render() {\n    const {channels, setup, onChange, isBlocking} = this.props;\n\n    return (\n      <div>\n        <Tabs\n          unmountOnExit\n          defaultActiveKey=\"gain\"\n          variant=\"pills\"\n          id=\"inputs\"\n          className=\"control-menu\"\n        >\n          <Tab title=\"Gain\" variant=\"primary\" eventKey=\"gain\">\n            <Card>\n              <Card.Header>Gain</Card.Header>\n              <Card.Body>\n                <BlockUi blocking={isBlocking}>\n                  <Gains\n                    group=\"inputs\"\n                    channels={channels}\n                    onChange={onChange}\n                  />\n                </BlockUi>\n              </Card.Body>\n            </Card>\n          </Tab>\n          <Tab title=\"EQ\" variant=\"primary\" eventKey=\"eq\">\n            <EQPlotPanel channels={channels} group=\"inputs\" />\n            <EQs\n              group=\"inputs\"\n              channels={channels}\n              isBlocking={isBlocking}\n              onChange={onChange}\n            />\n          </Tab>\n          <Tab title=\"Dynamic EQ\" variant=\"primary\" eventKey=\"dynamicEQ\">\n            <BlockUi blocking={isBlocking}>\n              <DynamicEQs\n                group=\"inputs\"\n                channels={channels}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n          <Tab title=\"Delay\" variant=\"primary\" eventKey=\"delays\">\n            <BlockUi blocking={isBlocking}>\n              <Delays\n                group=\"inputs\"\n                channels={channels}\n                setup={setup}\n                onChange={onChange}\n              />\n            </BlockUi>\n          </Tab>\n\n          <Tab title=\"Routing\" variant=\"primary\" eventKey=\"routing\">\n            <BlockUi blocking={isBlocking}>\n              <InputRouting setup={setup} onChange={onChange} />\n            </BlockUi>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nexport default Inputs;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from 'react-spinkit';\nimport isEqual from 'lodash.isequal';\nimport Outputs from './Outputs';\nimport Inputs from './Inputs';\n\nclass Device extends Component {\n  static defaultProps = {\n    device: {\n      isReady: false,\n      inputs: null,\n      outputs: null,\n      setup: null\n    }\n  };\n\n  static propTypes = {\n    isBlocking: PropTypes.bool.isRequired,\n    page: PropTypes.string.isRequired,\n    device: PropTypes.shape({\n      isReady: PropTypes.bool,\n      inputs: PropTypes.object,\n      outputs: PropTypes.object,\n      setup: PropTypes.object\n    }),\n    onChange: PropTypes.func.isRequired\n  };\n\n  state = {};\n\n  shouldComponentUpdate(nextProps) {\n    const {device, isBlocking, page} = this.props;\n    return !(\n      isEqual(device, nextProps.device) &&\n      isBlocking === nextProps.isBlocking &&\n      page === nextProps.page\n    );\n  }\n\n  render() {\n    const {isBlocking, device, onChange, page} = this.props;\n    const displayIfPage = (name, exected) => ({\n      display: name === exected ? 'block' : 'none'\n    });\n\n    if (!device || !device.isReady) {\n      return (\n        <div className=\"text-center content-loader\" alt=\"loading\">\n          <Spinner fadeIn=\"none\" name=\"line-scale\" color=\"#3498DB\" />\n          <h5 className=\"text-center\">Searching…</h5>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <div style={displayIfPage(page, 'inputs')}>\n          <Inputs\n            channels={device.inputs}\n            setup={device.setup}\n            isBlocking={isBlocking}\n            onChange={onChange}\n          />\n        </div>\n        <div style={displayIfPage(page, 'outputs')}>\n          <Outputs\n            channels={device.outputs}\n            setup={device.setup}\n            isBlocking={isBlocking}\n            onChange={onChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Device;\n","import React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nclass ChannelLevel extends PureComponent {\n  static propTypes = {\n    isOutput: PropTypes.bool.isRequired,\n    isLimited: PropTypes.bool.isRequired,\n    level: PropTypes.number.isRequired\n  };\n\n  render() {\n    const {isLimited, level, isOutput} = this.props;\n\n    if (level === -1) {\n      return null;\n    }\n\n    return (\n      <div className=\"led-bar\">\n        <Button\n          variant={level >= 1 ? 'success' : 'dark'}\n          disabled={level < 1}\n        />\n\n        <Button\n          variant={level >= 2 ? 'success' : 'dark'}\n          disabled={level < 2}\n        />\n\n        <Button\n          variant={level >= 3 ? 'success' : 'dark'}\n          disabled={level < 3}\n        />\n\n        <Button\n          variant={level >= 4 ? 'success' : 'dark'}\n          disabled={level < 4}\n        />\n\n        <Button\n          variant={level >= 5 ? 'warning' : 'dark'}\n          disabled={level < 5}\n        />\n\n        <Button variant={level >= 6 ? 'danger' : 'dark'} disabled={level < 6} />\n\n        {isOutput && (\n          <Button\n            variant={isLimited ? 'danger' : 'dark'}\n            disabled={!isLimited}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ChannelLevel;\n","import {FaVolumeMute, FaVolumeUp} from 'react-icons/fa';\nimport React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nclass MuteButton extends PureComponent {\n  static propTypes = {\n    isMuted: PropTypes.bool.isRequired,\n    channelId: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    isOutput: PropTypes.bool.isRequired\n  };\n\n  handleClick = () => {\n    const {channelId, isMuted, onChange, isOutput} = this.props;\n    onChange({\n      param: 'mute',\n      group: isOutput ? 'outputs' : 'inputs',\n      channelId,\n      value: !isMuted\n    });\n  };\n\n  render() {\n    const {isMuted} = this.props;\n\n    const muteStyle = {\n      float: 'left',\n      margin: '1px',\n      width: '36px',\n      height: '36px',\n      padding: '0px'\n    };\n\n    return (\n      <Button\n        className=\"responsive-rotate-90\"\n        variant={isMuted ? 'danger' : 'primary'}\n        style={muteStyle}\n        onClick={this.handleClick}\n      >\n        {isMuted ? <FaVolumeMute /> : <FaVolumeUp />}\n      </Button>\n    );\n  }\n}\n\nexport default MuteButton;\n","import React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nclass SelectButton extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    group: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    index: PropTypes.number.isRequired\n  };\n\n  render() {\n    const {onChange, group, channelId, name, isSelected, index} = this.props;\n\n    const muteStyle = {\n      float: 'left',\n      margin: '1px',\n      width: '36px',\n      height: '36px',\n      padding: '0px'\n    };\n\n    return (\n      <Button\n        className=\"responsive-rotate-90\"\n        variant={isSelected ? 'info' : 'primary'}\n        style={muteStyle}\n        onClick={() => onChange({group, channelId, isSelected, index})}\n      >\n        {name}\n      </Button>\n    );\n  }\n}\n\nexport default SelectButton;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport ChannelLevel from './ChannelLevel';\nimport MuteButton from './MuteButton';\nimport SelectButton from './SelectButton';\n\nclass ChannelControls extends PureComponent {\n  static defaultProps = {\n    isToggled: false\n  };\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    channelId: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    group: PropTypes.string.isRequired,\n    isLimited: PropTypes.bool.isRequired,\n    level: PropTypes.number.isRequired,\n    isMuted: PropTypes.bool.isRequired,\n    isOutput: PropTypes.bool.isRequired,\n    isToggled: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onToggleChange: PropTypes.func.isRequired\n  };\n\n  render() {\n    const {\n      isLimited,\n      level,\n      onChange,\n      channelId,\n      isOutput,\n      isMuted,\n      isToggled,\n      onToggleChange,\n      group,\n      name,\n      isSelected,\n      index\n    } = this.props;\n    return (\n      <div>\n        <SelectButton\n          key={'toggle-' + channelId}\n          state={isToggled}\n          group={group}\n          channelId={channelId}\n          name={name}\n          isSelected={isSelected}\n          index={index}\n          onChange={onToggleChange}\n        />\n        <MuteButton\n          key={'mute-' + channelId}\n          channelId={channelId}\n          isMuted={isMuted}\n          isOutput={isOutput}\n          onChange={onChange}\n        />\n        <ChannelLevel\n          key={'level-' + channelId}\n          channelId={channelId}\n          isMuted={isMuted}\n          isOutput={isOutput}\n          isLimited={isLimited}\n          level={level}\n          onChange={onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ChannelControls;\n","import {FaRandom, FaVolumeMute, FaVolumeUp} from 'react-icons/fa';\nimport React, {PureComponent} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport ChannelControls from './ChannelControls';\n\nimport './ChannelLevels.css';\n\nconst inputChannels = ['A', 'B', 'C', 'Sum'];\nconst outputChannels = ['1', '2', '3', '4', '5', '6'];\n\nclass ChannelLevels extends PureComponent {\n  static propTypes = {\n    device: PropTypes.shape({\n      isReady: PropTypes.bool.isRequired,\n      inputs: PropTypes.object,\n      outputs: PropTypes.object\n    }).isRequired,\n    inputs: PropTypes.arrayOf(\n      PropTypes.shape({\n        isLimited: PropTypes.bool.isRequired,\n        level: PropTypes.number.isRequired\n      })\n    ).isRequired,\n    outputs: PropTypes.arrayOf(\n      PropTypes.shape({\n        isLimited: PropTypes.bool.isRequired,\n        level: PropTypes.number.isRequired\n      })\n    ).isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    selected: {\n      inputs: inputChannels.map((channelId) => ({\n        name: channelId,\n        isSelected: false,\n        group: 'inputs',\n        channelId\n      })),\n      outputs: outputChannels.map((channelId) => ({\n        name: this.props.device.outputs[channelId].channelName\n          .match(/\\b\\w/g)\n          .join('')\n          .toUpperCase(),\n        isSelected: false,\n        group: 'outputs',\n        channelId\n      }))\n    }\n  };\n\n  handleMuteAll = (value) => {\n    const {onChange} = this.props;\n\n    const inputs = inputChannels.map((channelId) => ({\n      param: 'mute',\n      group: 'inputs',\n      channelId,\n      value\n    }));\n    const outputs = outputChannels.map((channelId) => ({\n      param: 'mute',\n      group: 'outputs',\n      channelId,\n      value\n    }));\n\n    const commands = inputs.concat(outputs);\n\n    onChange(commands);\n  };\n\n  handleToggleChange = ({group, index, isSelected}) => {\n    const selected = Object.assign({}, this.state.selected);\n    selected[group][index].isSelected = !isSelected;\n    this.setState(() => ({selected}));\n  };\n\n  handleToggle = () => {\n    const {onChange, device} = this.props;\n    const inputCommands = this.state.selected.inputs.filter(\n      (input) => input.isSelected\n    );\n    const outputCommands = this.state.selected.outputs.filter(\n      (ouput) => ouput.isSelected\n    );\n\n    const commands = inputCommands\n      .concat(outputCommands)\n      .map(({group, channelId}) => ({\n        param: 'mute',\n        group,\n        channelId,\n        value: !device[group][channelId].mute\n      }));\n\n    onChange(commands);\n  };\n\n  render() {\n    const {device, inputs, outputs, onChange} = this.props;\n\n    if (!device || !device.isReady || !inputs || !outputs) {\n      return null;\n    }\n\n    const isAnyUnmuted =\n      inputChannels.some((channel) => !device.inputs[channel].mute) ||\n      outputChannels.some((channel) => !device.outputs[channel].mute);\n\n    const isAnySelected =\n      this.state.selected.inputs.some((channel) => channel.isSelected) ||\n      this.state.selected.outputs.some((channel) => channel.isSelected);\n\n    return (\n      <div className=\"channels-container\">\n        <div className=\"channel-group\">\n          {inputChannels.map((channelId, index) => {\n            const {isLimited, level} = inputs[index] || {\n              isLimited: false,\n              level: -1\n            };\n            const {mute} = device.inputs[channelId];\n            const {group, name, isSelected} = this.state.selected.inputs[index];\n\n            return (\n              <ChannelControls\n                key={channelId}\n                channelId={channelId}\n                isOutput={false}\n                isMuted={mute}\n                isLimited={isLimited}\n                level={level}\n                group={group}\n                name={name}\n                isSelected={isSelected}\n                index={index}\n                onChange={onChange}\n                onToggleChange={this.handleToggleChange}\n              />\n            );\n          })}\n        </div>\n        <div className=\"channel-group\">\n          {outputChannels.map((channelId, index) => {\n            const {isLimited, level} = outputs[index];\n            const {mute} = device.outputs[channelId];\n            const {group, name, isSelected} = this.state.selected.outputs[\n              index\n            ];\n\n            return (\n              <ChannelControls\n                key={channelId}\n                isOutput\n                isMuted={mute}\n                group={group}\n                level={level}\n                isLimited={isLimited}\n                channelId={channelId}\n                name={name}\n                isSelected={isSelected}\n                index={index}\n                onChange={onChange}\n                onToggleChange={this.handleToggleChange}\n              />\n            );\n          })}\n        </div>\n        <Button\n          className=\"responsive-rotate-90 pull-left\"\n          variant={isAnySelected ? 'info' : 'primary'}\n          style={{\n            margin: '8px 1px 0',\n            width: '36px',\n            height: '36px',\n            padding: '0px'\n          }}\n          onClick={this.handleToggle}\n        >\n          <FaRandom />\n        </Button>\n        <Button\n          className=\"pull-left\"\n          id=\"mute-all\"\n          variant={isAnyUnmuted ? 'primary' : 'danger'}\n          style={{\n            width: '150px',\n            height: '36px',\n            margin: '8px 1px 0',\n            padding: '0px'\n          }}\n          onClick={() => this.handleMuteAll(isAnyUnmuted)}\n        >\n          {isAnyUnmuted ? <FaVolumeUp /> : <FaVolumeMute />}\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default ChannelLevels;\n","import {FaEdit, FaLock, FaSignal} from 'react-icons/fa';\nimport React, {Component} from 'react';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Navbar from 'react-bootstrap/Navbar';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash.isequal';\nimport {withBreakpoints} from 'react-breakpoints';\nimport ChannelLevels from './ChannelLevels';\n\nclass DeviceNavigation extends Component {\n  static propTypes = {\n    device: PropTypes.shape({\n      isReady: PropTypes.bool\n    }).isRequired,\n    page: PropTypes.string.isRequired,\n    isBlocking: PropTypes.bool.isRequired,\n    inputs: PropTypes.array.isRequired,\n    outputs: PropTypes.array.isRequired,\n    currentBreakpoint: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    onBlockingChange: PropTypes.func.isRequired\n  };\n\n  state = {};\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      device,\n      isBlocking,\n      page,\n      inputs,\n      outputs,\n      currentBreakpoint\n    } = this.props;\n    const {showLevels} = this.state;\n\n    return !(\n      isEqual(device, nextProps.device) &&\n      isEqual(inputs, nextProps.inputs) &&\n      isEqual(outputs, nextProps.outputs) &&\n      isBlocking === nextProps.isBlocking &&\n      page === nextProps.page &&\n      showLevels === nextState.showLevels &&\n      currentBreakpoint === nextProps.currentBreakpoint\n    );\n  }\n\n  handleLevelsShowChange = (isOpen, event, {source}) => {\n    if (source === 'rootClose') {\n      this.setState(() => ({showLevels: true}));\n    } else {\n      this.setState(({showLevels}) => ({showLevels: !showLevels}));\n    }\n  };\n\n  render() {\n    const {showLevels} = this.state;\n    const {\n      device,\n      isBlocking,\n      page,\n      inputs,\n      outputs,\n      onChange,\n      onPageChange,\n      onBlockingChange,\n      currentBreakpoint\n    } = this.props;\n\n    if (!device || !device.isReady || !inputs || !outputs) {\n      return null;\n    }\n\n    const isXs = currentBreakpoint === 'xs';\n\n    return (\n      <Navbar\n        fixed={isXs ? 'bottom' : 'top'}\n        bg=\"primary\"\n        variant=\"dark\"\n        className=\"wide-nav\"\n      >\n        <Nav className=\"end-button\">\n          <NavDropdown\n            open={showLevels}\n            className=\"channel-levels no-caret\"\n            title={<FaSignal />}\n            id=\"channel-levels-dropdown\"\n            drop={isXs ? 'up' : 'down'}\n            onToggle={this.handleLevelsShowChange}\n          >\n            <ChannelLevels\n              device={device}\n              inputs={inputs}\n              outputs={outputs}\n              isBlocking={isBlocking}\n              onChange={onChange}\n            />\n          </NavDropdown>\n        </Nav>\n        <Nav className=\"middle-buttons\" onSelect={onPageChange}>\n          <Nav.Item>\n            <Nav.Link active={page === 'inputs'} eventKey=\"inputs\">\n              Inputs\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link active={page === 'outputs'} eventKey=\"outputs\">\n              Outputs\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Nav activeKey=\"isBlocking\" className=\"end-button\">\n          <Nav.Item onClick={onBlockingChange}>\n            <Nav.Link>\n              {' '}\n              {isBlocking ? (\n                <FaLock style={{color: '#ee5f5b'}} />\n              ) : (\n                <FaEdit style={{color: '#62c462'}} />\n              )}\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default withBreakpoints(DeviceNavigation);\n","import React, {Component} from 'react';\nimport {ToastContainer, toast} from 'react-toastify';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEqual from 'lodash.isequal';\nimport ConfigNavigation from './ConfigNavigation';\nimport Device from './Device';\nimport DeviceNavigation from './DeviceNavigation';\nimport Parser from './dcx2496/parser';\nimport 'bootswatch/dist/slate/bootstrap.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {page: 'inputs', isBlocking: true, showModal: false};\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      device,\n      selected,\n      inputs,\n      outputs,\n      free,\n      page,\n      isBlocking,\n      showModal,\n      showLevels\n    } = this.state;\n\n    return (\n      !isEqual(device, nextState.device) ||\n      !isEqual(inputs, nextState.inputs) ||\n      !isEqual(outputs, nextState.outputs) ||\n      !isEqual(free, nextState.free) ||\n      selected !== nextState.selected ||\n      page !== nextState.page ||\n      isBlocking !== nextState.isBlocking ||\n      showModal !== nextState.showModal ||\n      showLevels !== nextState.showLevels\n    );\n  }\n\n  componentDidMount() {\n    this.pollState();\n    //this.stateTimer = setInterval(() => this.pollState(), 1000);\n    this.pollStatus();\n    //this.statusTimer = setInterval(() => this.pollStatus(), 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.stateTimer);\n    clearInterval(this.statusTimer);\n  }\n\n  async pollState() {\n    if (this.pollingState) {\n      return;\n    }\n\n    this.pollingState = true;\n\n    try {\n      const response = await fetch(`api/state`, {credentials: 'same-origin'});\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      if (this.invalidateUntil > new Date()) {\n        return;\n      }\n\n      const buffer = await response.arrayBuffer();\n      this.setState(Parser.parseState(buffer));\n      toast.dismiss('no-connection');\n    } catch {\n      if (toast.isActive('no-connection')) {\n        return;\n      }\n\n      toast.error(`Check network connection.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        toastId: 'no-connection',\n        autoClose: false\n      });\n    } finally {\n      this.pollingState = false;\n    }\n  }\n\n  async pollStatus() {\n    if (this.pollingStatus) {\n      return;\n    }\n\n    this.pollingStatus = true;\n    try {\n      const response = await fetch(`api/status`, {credentials: 'same-origin'});\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      const buffer = await response.arrayBuffer();\n      this.setState(Parser.parseStatus(buffer));\n      toast.dismiss('no-connection');\n    } catch {\n      if (toast.isActive('no-connection')) {\n        return;\n      }\n\n      toast.error(`Check network connection.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        toastId: 'no-connection',\n        autoClose: false\n      });\n    } finally {\n      this.pollingStatus = false;\n    }\n  }\n\n  handleBlockingChange = () => {\n    this.setState(({isBlocking}) => ({isBlocking: !isBlocking}));\n  };\n\n  handleDeviceUpdate = async (commands) => {\n    const {device: oldDevice, selected} = this.state;\n    const device = cloneDeep(oldDevice);\n    const data = Parser.serializeCommands(selected, device, commands);\n\n    this.setState({device});\n\n    const invalidateUntil = new Date();\n    invalidateUntil.setSeconds(invalidateUntil.getSeconds() + 2);\n    this.invalidateUntil = invalidateUntil;\n\n    try {\n      await fetch(`/api/commands`, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {'Content-Type': 'application/binary'},\n        body: data\n      });\n    } catch {\n      this.setState({device: oldDevice});\n      toast.error(`Failed to update settings.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        toastId: 'failed-command',\n        autoClose: true\n      });\n    }\n  };\n\n  handleDeviceSelect = async (selected) => {\n    const oldSelected = this.state.selected;\n    this.setState({selected});\n\n    try {\n      await fetch(`/api/selected`, {\n        method: 'PUT',\n        credentials: 'same-origin',\n        headers: {'Content-Type': 'text/plain'},\n        body: selected.toString()\n      });\n    } catch {\n      this.setState({selected: oldSelected});\n      toast.error(`Failed set selected device.`, {\n        position: toast.POSITION.BOTTOM_LEFT,\n        toastId: 'failed-select',\n        autoClose: true\n      });\n    }\n  };\n\n  handlePageChange = (page) => {\n    this.setState({page});\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    const {\n      page,\n      device,\n      devices,\n      free,\n      selected,\n      isBlocking,\n      inputs,\n      outputs\n    } = this.state;\n\n    return (\n      <div>\n        {device && inputs && outputs && (\n          <DeviceNavigation\n            device={device}\n            isBlocking={isBlocking}\n            page={page}\n            inputs={inputs}\n            outputs={outputs}\n            onChange={this.handleDeviceUpdate}\n            onPageChange={this.handlePageChange}\n            onBlockingChange={this.handleBlockingChange}\n          />\n        )}\n        <Device\n          isBlocking={isBlocking}\n          device={device}\n          page={page}\n          onChange={this.handleDeviceUpdate}\n        />\n        <ConfigNavigation\n          device={device}\n          devices={devices}\n          selected={selected}\n          free={free}\n          onChange={this.handleDeviceUpdate}\n          onSelectDevice={this.handleDeviceSelect}\n        />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactBreakpoints from 'react-breakpoints';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\n\nReactDOM.render(\n  <ReactBreakpoints breakpoints={breakpoints}>\n    <App />\n  </ReactBreakpoints>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}